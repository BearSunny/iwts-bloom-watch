{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/BloomWatch/bloom-watch/frontend/src/app/BloomingMap.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport axios from 'axios';\r\n\r\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n});\r\n\r\n// Generate ~300 random global points\r\nconst generateRandomPoints = (count = 300) => {\r\n  const points = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const lat = Math.random() * 180 - 90;\r\n    const lon = Math.random() * 360 - 180;\r\n    points.push([lon, lat]);\r\n  }\r\n  return points;\r\n};\r\nconst globalPoints = generateRandomPoints();\r\n\r\nexport default function BloomingMap({ compareMode, onResetCompareMode }) {\r\n  const leftMapContainer = useRef(null);\r\n  const rightMapContainer = useRef(null);\r\n  const compareContainer = useRef(null);\r\n  const leftMapRef = useRef(null);\r\n  const rightMapRef = useRef(null);\r\n  const compareMapRef = useRef(null);\r\n  const sliderRef = useRef(null);\r\n\r\n  const [ndviData, setNdviData] = useState([]);\r\n  const [frame, setFrame] = useState(0);\r\n  const [globalCompareMode, setGlobalCompareMode] = useState(false);\r\n  const [pointCompareMode, setPointCompareMode] = useState(false);\r\n\r\n  const [selectedLeftDate, setSelectedLeftDate] = useState(null);\r\n  const [selectedRightDate, setSelectedRightDate] = useState(null);\r\n\r\n  const [selectedPoints, setSelectedPoints] = useState({\r\n    first: null,\r\n    second: null\r\n  });\r\n  const [pointData, setPointData] = useState({\r\n    first: [],\r\n    second: []\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Update comparison handling based on mode\r\n  useEffect(() => {\r\n    if (!compareMode) return;\r\n\r\n    switch (compareMode.type) {\r\n      case \"global\":\r\n        setGlobalCompareMode(true);\r\n        // Initialize with start/end dates from dateRange\r\n        if (ndviData.length > 0) {\r\n          setSelectedLeftDate(0);\r\n          setSelectedRightDate(ndviData.length - 1);\r\n        }\r\n        break;\r\n      case \"point\":\r\n        setPointCompareMode(true);\r\n        break;\r\n      case \"export\":\r\n        // Will be implemented later\r\n        console.log(\"Export functionality coming soon\");\r\n        break;\r\n    }\r\n  }, [compareMode]);\r\n\r\n  // ✅ Fetch global NDVI\r\n  useEffect(() => {\r\n    const fetchNDVI = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const res = await api.get(\"/ndvi/global\", {\r\n          params: {\r\n            start: compareMode?.dateRange?.start,\r\n            end: compareMode?.dateRange?.end\r\n          }\r\n        });\r\n        const data = res.data.data || res.data;\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setNdviData(data);\r\n        } else {\r\n          throw new Error(\"Invalid NDVI data format\");\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error(\"Error fetching NDVI:\", err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchNDVI();\r\n  }, [compareMode?.dateRange]);\r\n\r\n  const generatePulseData = (ndviValue, date) => ({\r\n    type: \"FeatureCollection\",\r\n    features: globalPoints.map(([lon, lat]) => ({\r\n      type: \"Feature\",\r\n      geometry: { type: \"Point\", coordinates: [lon, lat] },\r\n      properties: {\r\n        ndvi: ndviValue,\r\n        date,\r\n        intensity: Math.max(0, Math.min(1, (ndviValue - 0.28) / 0.22)),\r\n      },\r\n    })),\r\n  });\r\n\r\n  const addPulseLayer = (map, sourceId, layerId, data) => {\r\n    // Check if map is loaded\r\n    if (!map.isStyleLoaded()) {\r\n      map.once('load', () => addPulseLayer(map, sourceId, layerId, data));\r\n      return;\r\n    }\r\n\r\n    if (!map.getSource(sourceId)) {\r\n      map.addSource(sourceId, { type: \"geojson\", data });\r\n    } else {\r\n      map.getSource(sourceId).setData(data);\r\n    }\r\n\r\n    if (!map.getLayer(layerId)) {\r\n      map.addLayer({\r\n        id: layerId,\r\n        type: \"circle\",\r\n        source: sourceId,\r\n        paint: {\r\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"intensity\"], 0, 2, 1, 10],\r\n          \"circle-color\": [\r\n            \"interpolate\",\r\n            [\"linear\"],\r\n            [\"get\", \"intensity\"],\r\n            0, \"#60a5fa\",\r\n            0.3, \"#facc15\",\r\n            0.6, \"#22c55e\",\r\n            1, \"#15803d\",\r\n          ],\r\n          \"circle-opacity\": 0.6,\r\n          \"circle-blur\": 0.7,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // ✅ Init maps & interactions\r\n  useEffect(() => {\r\n    if (!leftMapContainer.current) return;\r\n\r\n    const createMap = (container) => {\r\n      const map = new mapboxgl.Map({\r\n        container,\r\n        style: \"mapbox://styles/mapbox/light-v11\",\r\n        center: [0, 20],\r\n        zoom: 1.5,\r\n      });\r\n      return map;\r\n    };\r\n\r\n    // Always create the left map\r\n    leftMapRef.current = createMap(leftMapContainer.current);\r\n\r\n    // Create right map for global compare\r\n    if (globalCompareMode && rightMapContainer.current) {\r\n      rightMapRef.current = createMap(rightMapContainer.current);\r\n    }\r\n\r\n    // Point comparison click handler\r\n    const clickHandler = async (e) => {\r\n      if (!pointCompareMode) return;\r\n      \r\n      const { lng, lat } = e.lngLat;\r\n      const color = !selectedPoints.first ? \"#2563eb\" : \"#16a34a\";\r\n      \r\n      new mapboxgl.Marker({ color }).setLngLat([lng, lat]).addTo(leftMapRef.current);\r\n\r\n      try {\r\n        const res = await api.get(\"/ndvi/point\", {\r\n          params: { \r\n            lat, \r\n            lon: lng, \r\n            start: compareMode?.dateRange?.start,\r\n            end: compareMode?.dateRange?.end,\r\n            buffer: 1000 \r\n          },\r\n        });\r\n\r\n        if (!selectedPoints.first) {\r\n          setSelectedPoints(prev => ({ ...prev, first: { lat, lon: lng }}));\r\n          setPointData(prev => ({ ...prev, first: res.data.data }));\r\n        } else if (!selectedPoints.second) {\r\n          setSelectedPoints(prev => ({ ...prev, second: { lat, lon: lng }}));\r\n          setPointData(prev => ({ ...prev, second: res.data.data }));\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching point NDVI:\", err);\r\n      }\r\n    };\r\n\r\n    if (leftMapRef.current) {\r\n      leftMapRef.current.on(\"click\", clickHandler);\r\n    }\r\n\r\n    // Improved cleanup function\r\n    return () => {\r\n      // Remove click handler\r\n      if (leftMapRef.current) {\r\n        leftMapRef.current.off(\"click\", clickHandler);\r\n      }\r\n      \r\n      // Only remove maps when exiting comparison mode completely\r\n      if (!globalCompareMode && !pointCompareMode) {\r\n        if (leftMapRef.current) {\r\n          leftMapRef.current.remove();\r\n          leftMapRef.current = null;\r\n        }\r\n        if (rightMapRef.current) {\r\n          rightMapRef.current.remove();\r\n          rightMapRef.current = null;\r\n        }\r\n      }\r\n    };\r\n  }, [globalCompareMode, pointCompareMode, compareMode?.dateRange]);\r\n\r\n  // ✅ Animate pulses (stop when in regional compare mode)\r\n  useEffect(() => {\r\n    if (!leftMapRef.current || ndviData.length === 0 || pointCompareMode) return;\r\n\r\n    if (globalCompareMode && selectedLeftDate !== null && selectedRightDate !== null) {\r\n      const leftData = ndviData[selectedLeftDate];\r\n      const rightData = ndviData[selectedRightDate];\r\n\r\n      if (leftData) {\r\n        const pulseData = generatePulseData(leftData.ndvi, leftData.date);\r\n        addPulseLayer(leftMapRef.current, \"ndvi-source-left\", \"ndvi-layer-left\", pulseData);\r\n      }\r\n\r\n      if (rightData && rightMapRef.current) {\r\n        const pulseData = generatePulseData(rightData.ndvi, rightData.date);\r\n        addPulseLayer(rightMapRef.current, \"ndvi-source-right\", \"ndvi-layer-right\", pulseData);\r\n      }\r\n    } else if (!globalCompareMode) {\r\n      let i = 0;\r\n      const interval = setInterval(() => {\r\n        i = (i + 1) % ndviData.length;\r\n        setFrame(i);\r\n\r\n        const { ndvi, date } = ndviData[i];\r\n        const pulseData = generatePulseData(ndvi, date);\r\n\r\n        addPulseLayer(leftMapRef.current, \"ndvi-source-left\", \"ndvi-layer-left\", pulseData);\r\n      }, 1500);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [ndviData, globalCompareMode, selectedLeftDate, selectedRightDate, pointCompareMode]);\r\n\r\n  const handleSliderDrag = (e) => {\r\n    if (!compareContainer.current) return;\r\n    const rect = compareContainer.current.getBoundingClientRect();\r\n    const x = Math.max(0, Math.min(e.clientX - rect.left, rect.width));\r\n    const percentage = (x / rect.width) * 100;\r\n    setSliderPosition(percentage);\r\n  };\r\n\r\n  // Update ExitButton to properly reset everything\r\n  const ExitButton = () => (\r\n    <button\r\n      onClick={() => {\r\n        // Reset all comparison states\r\n        setGlobalCompareMode(false);\r\n        setPointCompareMode(false);\r\n        setSelectedPoints({ first: null, second: null });\r\n        setPointData({ first: [], second: [] });\r\n        setSelectedLeftDate(null);\r\n        setSelectedRightDate(null);\r\n        \r\n        // Remove maps\r\n        if (leftMapRef.current) {\r\n          leftMapRef.current.remove();\r\n          leftMapRef.current = null;\r\n        }\r\n        if (rightMapRef.current) {\r\n          rightMapRef.current.remove();\r\n          rightMapRef.current = null;\r\n        }\r\n\r\n        // Reset parent component state\r\n        if (onResetCompareMode) onResetCompareMode();\r\n      }}\r\n      className=\"absolute top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-red-600 transition-colors z-50\"\r\n    >\r\n      Exit Comparison\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex w-full h-screen relative\">\r\n      {isLoading && (\r\n        <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-4 rounded-lg shadow-lg\">\r\n            <p className=\"text-lg font-semibold\">Loading NDVI data...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"absolute top-4 left-1/2 -translate-x-1/2 bg-red-500 text-white px-4 py-2 rounded-lg\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div ref={leftMapContainer} className=\"flex-1\" />\r\n      {globalCompareMode && (\r\n        <div ref={rightMapContainer} className=\"flex-1 border-l-2 border-gray-400\" />\r\n      )}\r\n\r\n      {/* Base map time slider HUD */}\r\n      {!globalCompareMode && !pointCompareMode && ndviData.length > 0 && (\r\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-white/80 px-4 py-2 rounded-lg shadow\">\r\n          <p className=\"text-sm font-semibold\">\r\n            📅 {ndviData[frame]?.date} | 🌱 NDVI: {ndviData[frame]?.ndvi.toFixed(3)}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Point comparison chart */}\r\n      {pointCompareMode && selectedPoints.first && selectedPoints.second && (\r\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 w-[80%] max-w-4xl bg-black/80 p-6 rounded-2xl shadow-2xl\">\r\n          <div className=\"grid grid-cols-2 gap-8\">\r\n            <div>\r\n              <h3 className=\"text-white text-lg mb-3 flex items-center\">\r\n                <span className=\"w-4 h-4 rounded-full bg-blue-600 mr-2\"></span>\r\n                Point 1 NDVI Trend\r\n              </h3>\r\n              <div className=\"text-gray-400 text-sm\">\r\n                {pointData.first.map((data, i) => (\r\n                  <div key={i}>{data.date}: {data.ndvi.toFixed(3)}</div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-white text-lg mb-3 flex items-center\">\r\n                <span className=\"w-4 h-4 rounded-full bg-green-600 mr-2\"></span>\r\n                Point 2 NDVI Trend\r\n              </h3>\r\n              <div className=\"text-gray-400 text-sm\">\r\n                {pointData.second.map((data, i) => (\r\n                  <div key={i}>{data.date}: {data.ndvi.toFixed(3)}</div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {(globalCompareMode || pointCompareMode) && <ExitButton />}\r\n\r\n      {/* Global comparison controls */}\r\n      {globalCompareMode && ndviData.length > 0 && (\r\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 w-[80%] max-w-4xl bg-black/80 p-6 rounded-2xl shadow-2xl\">\r\n          <div className=\"grid grid-cols-2 gap-8\">\r\n            <div>\r\n              <h3 className=\"text-white text-lg mb-3\">Left Map Period</h3>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max={ndviData.length - 1}\r\n                value={selectedLeftDate}\r\n                onChange={(e) => setSelectedLeftDate(parseInt(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\r\n              />\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                {ndviData[selectedLeftDate]?.date} → NDVI {ndviData[selectedLeftDate]?.ndvi.toFixed(3)}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-white text-lg mb-3\">Right Map Period</h3>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max={ndviData.length - 1}\r\n                value={selectedRightDate}\r\n                onChange={(e) => setSelectedRightDate(parseInt(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\r\n              />\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                {ndviData[selectedRightDate]?.date} → NDVI {ndviData[selectedRightDate]?.ndvi.toFixed(3)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/BloomWatch/bloom-watch/frontend/src/app/page.js"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport BloomingMap from \"./BloomingMap\";\r\n\r\nexport default function Home() {\r\n  const [showCompareModal, setShowCompareModal] = useState(false);\r\n  const [compareMode, setCompareMode] = useState(null);\r\n  const [dateRange, setDateRange] = useState({\r\n    start: \"2024-01-01\",\r\n    end: \"2024-12-31\"\r\n  });\r\n\r\n  const handleResetCompareMode = () => {\r\n    setCompareMode(null);\r\n  };\r\n\r\n  return (\r\n    <main className=\"w-full h-screen flex flex-row justify-center\">\r\n      <div id=\"side-bar\" className=\"justify-center w-10 bg-primary\">\r\n        <img src=\"./bloom.svg\" className=\"h-10\" alt=\"Bloom logo\" />\r\n      </div>\r\n      <div id=\"navigator\" className=\"absolute flex my-[15px] z-1\">\r\n        <div>\r\n          <img src=\"./flower.svg\" className=\"absolute my-[5px] mx-[25px] w-10 h-[20px]\" alt=\"Flower icon\" />\r\n          <button\r\n            id=\"species\"\r\n            className=\"h-[30px] mx-[20px] px-[40px] w-40 bg-primary font-bold text-white text-left rounded-3xl\"\r\n          >\r\n            Species\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <img src=\"./comparison.svg\" className=\"absolute my-[5px] mx-[25px] w-10 h-[20px]\" alt=\"Comparison icon\" />\r\n          <button\r\n            id=\"locations\"\r\n            onClick={() => setShowCompareModal(true)}\r\n            className=\"h-[30px] mx-[20px] px-[40px] w-40 bg-primary font-bold text-white text-left rounded-3xl\"\r\n          >\r\n            Comparison\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {showCompareModal && (\r\n        <div className=\"absolute inset-0 bg-black/60 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-2xl p-8 w-[500px] shadow-2xl\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800\">Choose Comparison Mode</h2>\r\n              <button \r\n                onClick={() => setShowCompareModal(false)}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date Range</label>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <input\r\n                  type=\"date\"\r\n                  value={dateRange.start}\r\n                  onChange={(e) => setDateRange(prev => ({ ...prev, start: e.target.value }))}\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  value={dateRange.end}\r\n                  onChange={(e) => setDateRange(prev => ({ ...prev, end: e.target.value }))}\r\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col gap-4\">\r\n              <button\r\n                onClick={() => { \r\n                  setCompareMode({ type: \"global\", dateRange }); \r\n                  setShowCompareModal(false); \r\n                }}\r\n                className=\"px-6 py-4 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 font-semibold transition-colors\"\r\n              >\r\n                🌍 Global NDVI Comparison\r\n              </button>\r\n              <button\r\n                onClick={() => { \r\n                  setCompareMode({ type: \"point\", dateRange }); \r\n                  setShowCompareModal(false); \r\n                }}\r\n                className=\"px-6 py-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600 font-semibold transition-colors\"\r\n              >\r\n                📍 Compare Two Points\r\n              </button>\r\n              <button\r\n                onClick={() => { \r\n                  setCompareMode({ type: \"export\", dateRange }); \r\n                  setShowCompareModal(false); \r\n                }}\r\n                className=\"px-6 py-4 bg-purple-500 text-white rounded-lg hover:bg-purple-600 font-semibold transition-colors\"\r\n              >\r\n                📊 Export Analysis Charts\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <BloomingMap compareMode={compareMode} onResetCompareMode={handleResetCompareMode} />\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AACA;AACA;;;AAFA;;;AAIe,SAAS;;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,yKAAQ,EAAC;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,yKAAQ,EAAC;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;QACzC,OAAO;QACP,KAAK;IACP;IAEA,MAAM,yBAAyB;QAC7B,eAAe;IACjB;IAEA,qBACE,6LAAC;QAAK,WAAU;;0BACd,6LAAC;gBAAI,IAAG;gBAAW,WAAU;0BAC3B,cAAA,6LAAC;oBAAI,KAAI;oBAAc,WAAU;oBAAO,KAAI;;;;;;;;;;;0BAE9C,6LAAC;gBAAI,IAAG;gBAAY,WAAU;;kCAC5B,6LAAC;;0CACC,6LAAC;gCAAI,KAAI;gCAAe,WAAU;gCAA4C,KAAI;;;;;;0CAClF,6LAAC;gCACC,IAAG;gCACH,WAAU;0CACX;;;;;;;;;;;;kCAIH,6LAAC;;0CACC,6LAAC;gCAAI,KAAI;gCAAmB,WAAU;gCAA4C,KAAI;;;;;;0CACtF,6LAAC;gCACC,IAAG;gCACH,SAAS,IAAM,oBAAoB;gCACnC,WAAU;0CACX;;;;;;;;;;;;;;;;;;YAMJ,kCACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAmC;;;;;;8CACjD,6LAAC;oCACC,SAAS,IAAM,oBAAoB;oCACnC,WAAU;8CACX;;;;;;;;;;;;sCAKH,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAChE,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAK;4CACL,OAAO,UAAU,KAAK;4CACtB,UAAU,CAAC,IAAM,aAAa,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;oDAAC,CAAC;4CACzE,WAAU;;;;;;sDAEZ,6LAAC;4CACC,MAAK;4CACL,OAAO,UAAU,GAAG;4CACpB,UAAU,CAAC,IAAM,aAAa,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,KAAK,EAAE,MAAM,CAAC,KAAK;oDAAC,CAAC;4CACvE,WAAU;;;;;;;;;;;;;;;;;;sCAKhB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS;wCACP,eAAe;4CAAE,MAAM;4CAAU;wCAAU;wCAC3C,oBAAoB;oCACtB;oCACA,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;wCACP,eAAe;4CAAE,MAAM;4CAAS;wCAAU;wCAC1C,oBAAoB;oCACtB;oCACA,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;wCACP,eAAe;4CAAE,MAAM;4CAAU;wCAAU;wCAC3C,oBAAoB;oCACtB;oCACA,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;0BAQT,6LAAC,uIAAW;gBAAC,aAAa;gBAAa,oBAAoB;;;;;;;;;;;;AAGjE;GA1GwB;KAAA","debugId":null}}]
}