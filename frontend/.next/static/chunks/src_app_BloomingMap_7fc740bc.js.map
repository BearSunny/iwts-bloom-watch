{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/BloomWatch/bloom-watch/frontend/src/app/BloomingMap.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport axios from 'axios';\r\n\r\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n});\r\n\r\n// Generate ~300 random global points\r\nconst generateRandomPoints = (count = 300) => {\r\n  const points = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const lat = Math.random() * 180 - 90;\r\n    const lon = Math.random() * 360 - 180;\r\n    points.push([lon, lat]);\r\n  }\r\n  return points;\r\n};\r\nconst globalPoints = generateRandomPoints();\r\n\r\nexport default function BloomingMap() {\r\n  const leftMapContainer = useRef(null);\r\n  const rightMapContainer = useRef(null);\r\n  const leftMapRef = useRef(null);\r\n  const rightMapRef = useRef(null);\r\n\r\n  const [ndviData, setNdviData] = useState([]);\r\n  const [frame, setFrame] = useState(0);\r\n  const [comparisonMode, setComparisonMode] = useState(false);\r\n\r\n  // ðŸ”¹ Extra states for point/region\r\n  const [selectedRegion, setSelectedRegion] = useState(null);\r\n  const [regionData, setRegionData] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  // âœ… Fetch global NDVI\r\n  useEffect(() => {\r\n    const fetchNDVI = async () => {\r\n      try {\r\n        const res = await api.get(\"/ndvi/global\");\r\n        setNdviData(res.data.data); // [{date, ndvi}]\r\n      } catch (err) {\r\n        console.error(\"Error fetching NDVI:\", err);\r\n      }\r\n    };\r\n    fetchNDVI();\r\n  }, []);\r\n\r\n  const generatePulseData = (ndviValue, date) => ({\r\n    type: \"FeatureCollection\",\r\n    features: globalPoints.map(([lon, lat]) => ({\r\n      type: \"Feature\",\r\n      geometry: { type: \"Point\", coordinates: [lon, lat] },\r\n      properties: {\r\n        ndvi: ndviValue,\r\n        date,\r\n        intensity: Math.max(0, Math.min(1, (ndviValue - 0.28) / 0.22)),\r\n      },\r\n    })),\r\n  });\r\n\r\n  const addPulseLayer = (map, sourceId, layerId, data) => {\r\n    if (!map.getSource(sourceId)) {\r\n      map.addSource(sourceId, { type: \"geojson\", data });\r\n    } else {\r\n      map.getSource(sourceId).setData(data);\r\n    }\r\n\r\n    if (!map.getLayer(layerId)) {\r\n      map.addLayer({\r\n        id: layerId,\r\n        type: \"circle\",\r\n        source: sourceId,\r\n        paint: {\r\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"intensity\"], 0, 2, 1, 10],\r\n          \"circle-color\": [\r\n            \"interpolate\",\r\n            [\"linear\"],\r\n            [\"get\", \"intensity\"],\r\n            0, \"#60a5fa\",\r\n            0.3, \"#facc15\",\r\n            0.6, \"#22c55e\",\r\n            1, \"#15803d\",\r\n          ],\r\n          \"circle-opacity\": 0.6,\r\n          \"circle-blur\": 0.7,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // âœ… Init maps & interactions\r\n  useEffect(() => {\r\n    if (!leftMapContainer.current) return;\r\n\r\n    const createMap = (container) =>\r\n      new mapboxgl.Map({\r\n        container,\r\n        style: \"mapbox://styles/mapbox/light-v11\",\r\n        center: [0, 20],\r\n        zoom: 1.5,\r\n      });\r\n\r\n    const leftMap = createMap(leftMapContainer.current);\r\n    leftMapRef.current = leftMap;\r\n\r\n    if (comparisonMode && rightMapContainer.current) {\r\n      const rightMap = createMap(rightMapContainer.current);\r\n      rightMapRef.current = rightMap;\r\n    }\r\n\r\n    // ðŸ”¹ Add interactions (click + draw)\r\n    const draw = new MapboxDraw({\r\n      displayControlsDefault: false,\r\n      controls: { polygon: true, trash: true },\r\n    });\r\n    leftMap.addControl(draw);\r\n\r\n    leftMap.on(\"click\", async (e) => {\r\n      const { lng, lat } = e.lngLat;\r\n\r\n      new mapboxgl.Marker({ color: \"lime\" }).setLngLat([lng, lat]).addTo(leftMap);\r\n\r\n      try {\r\n        const res = await api.get(\"/ndvi/point\", {\r\n          params: { \r\n            lat, \r\n            lon: lng, \r\n            start: \"2024-03-01\", \r\n            end: \"2024-05-31\", \r\n            buffer: 1000 \r\n          },\r\n        });\r\n        setSelectedRegion({ lat, lon: lng });\r\n        setRegionData(res.data.data);\r\n        setCurrentIndex(0);\r\n        setIsPlaying(true);\r\n      } catch (err) {\r\n        console.error(\"Error fetching point NDVI:\", err);\r\n      }\r\n    });\r\n\r\n    leftMap.on(\"draw.create\", async (e) => {\r\n      const coords = e.features[0].geometry.coordinates[0];\r\n      const lons = coords.map((c) => c[0]);\r\n      const lats = coords.map((c) => c[1]);\r\n      const bbox = [Math.min(...lons), Math.min(...lats), Math.max(...lons), Math.max(...lats)];\r\n\r\n      try {\r\n        const res = await api.get(\"/ndvi/regional\", {\r\n          params: { bbox: bbox.join(\",\"), start: \"2024-03-01\", end: \"2024-05-31\" },\r\n        });\r\n        setSelectedRegion({ bbox });\r\n        setRegionData(res.data.data);\r\n        setCurrentIndex(0);\r\n        setIsPlaying(true);\r\n      } catch (err) {\r\n        console.error(\"Error fetching regional NDVI:\", err);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (leftMapRef.current) leftMapRef.current.remove();\r\n      if (rightMapRef.current) rightMapRef.current.remove();\r\n    };\r\n  }, [comparisonMode]);\r\n\r\n  // âœ… Animate pulses\r\n  useEffect(() => {\r\n    if (!leftMapRef.current || ndviData.length === 0) return;\r\n\r\n    let i = 0;\r\n    const interval = setInterval(() => {\r\n      i = (i + 1) % ndviData.length;\r\n      setFrame(i);\r\n\r\n      const { ndvi, date } = ndviData[i];\r\n      const pulseData = generatePulseData(ndvi, date);\r\n\r\n      addPulseLayer(leftMapRef.current, \"ndvi-source-left\", \"ndvi-layer-left\", pulseData);\r\n      if (comparisonMode && rightMapRef.current) {\r\n        addPulseLayer(rightMapRef.current, \"ndvi-source-right\", \"ndvi-layer-right\", pulseData);\r\n      }\r\n    }, 1500);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [ndviData, comparisonMode]);\r\n\r\n  return (\r\n    <div className=\"flex w-full h-screen relative\">\r\n      <div ref={leftMapContainer} className=\"flex-1\" />\r\n      {comparisonMode && (\r\n        <div ref={rightMapContainer} className=\"flex-1 border-l border-gray-300\" />\r\n      )}\r\n\r\n      {/* HUD */}\r\n      {ndviData.length > 0 && (\r\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-white/80 px-4 py-2 rounded-lg shadow\">\r\n          <p className=\"text-sm font-semibold\">\r\n            ðŸ“… {ndviData[frame]?.date} | ðŸŒ± NDVI: {ndviData[frame]?.ndvi.toFixed(3)}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        onClick={() => setComparisonMode(!comparisonMode)}\r\n        className=\"absolute top-4 right-4 bg-emerald-500 text-white px-4 py-2 rounded-lg shadow-lg\"\r\n      >\r\n        {comparisonMode ? \"Exit Comparison\" : \"Compare\"}\r\n      </button>\r\n\r\n      {/* Point/Region NDVI slider */}\r\n      {selectedRegion && regionData.length > 0 && (\r\n        <div className=\"absolute bottom-20 left-1/2 -translate-x-1/2 w-[80%] max-w-2xl z-20\">\r\n          <div className=\"bg-black/80 p-5 rounded-2xl shadow-2xl\">\r\n            <h3 className=\"text-white text-lg mb-2\">\r\n              NDVI Timeline â€¢{\" \"}\r\n              {selectedRegion.lat\r\n                ? `${selectedRegion.lat.toFixed(2)}Â°, ${selectedRegion.lon.toFixed(2)}Â°`\r\n                : \"Region\"}\r\n            </h3>\r\n\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={regionData.length - 1}\r\n              value={currentIndex}\r\n              onChange={(e) => {\r\n                setCurrentIndex(parseInt(e.target.value));\r\n                setIsPlaying(false);\r\n              }}\r\n              className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\r\n            />\r\n\r\n            <div className=\"mt-2 text-sm text-gray-400\">\r\n              {regionData[currentIndex]?.date} â†’ NDVI{\" \"}\r\n              {regionData[currentIndex]?.ndvi.toFixed(3)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}