{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/BloomWatch/bloom-watch/frontend/src/app/BloomingMap.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport axios from 'axios';\r\n\r\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n});\r\n\r\n// Generate ~300 random global points\r\nconst generateRandomPoints = (count = 300) => {\r\n  const points = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const lat = Math.random() * 180 - 90;\r\n    const lon = Math.random() * 360 - 180;\r\n    points.push([lon, lat]);\r\n  }\r\n  return points;\r\n};\r\nconst globalPoints = generateRandomPoints();\r\n\r\nexport default function BloomingMap() {\r\n  const leftMapContainer = useRef(null);\r\n  const rightMapContainer = useRef(null);\r\n  const compareContainer = useRef(null);\r\n  const leftMapRef = useRef(null);\r\n  const rightMapRef = useRef(null);\r\n  const compareMapRef = useRef(null);\r\n  const sliderRef = useRef(null);\r\n\r\n  const [ndviData, setNdviData] = useState([]);\r\n  const [frame, setFrame] = useState(0);\r\n  const [globalCompareMode, setGlobalCompareMode] = useState(false);\r\n\r\n  const [selectedLeftDate, setSelectedLeftDate] = useState(null);\r\n  const [selectedRightDate, setSelectedRightDate] = useState(null);\r\n\r\n  const [selectedRegion, setSelectedRegion] = useState(null);\r\n  const [regionData, setRegionData] = useState([]);\r\n  const [sliderPosition, setSliderPosition] = useState(50);\r\n  const [regionalCompareMode, setRegionalCompareMode] = useState(false);\r\n  \r\n  // For date picker in regional mode\r\n  const [beforeDateIndex, setBeforeDateIndex] = useState(0);\r\n  const [afterDateIndex, setAfterDateIndex] = useState(0);\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n\r\n  // ✅ Fetch global NDVI\r\n  useEffect(() => {\r\n    const fetchNDVI = async () => {\r\n      try {\r\n        const res = await api.get(\"/ndvi/global\");\r\n        console.log(\"Global NDVI response:\", res.data);\r\n        \r\n        const data = res.data.data || res.data;\r\n        \r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setNdviData(data);\r\n        } else {\r\n          console.error(\"Invalid NDVI data format:\", data);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching NDVI:\", err);\r\n        console.error(\"Error details:\", err.response?.data);\r\n      }\r\n    };\r\n    fetchNDVI();\r\n  }, []);\r\n\r\n  const generatePulseData = (ndviValue, date) => ({\r\n    type: \"FeatureCollection\",\r\n    features: globalPoints.map(([lon, lat]) => ({\r\n      type: \"Feature\",\r\n      geometry: { type: \"Point\", coordinates: [lon, lat] },\r\n      properties: {\r\n        ndvi: ndviValue,\r\n        date,\r\n        intensity: Math.max(0, Math.min(1, (ndviValue - 0.28) / 0.22)),\r\n      },\r\n    })),\r\n  });\r\n\r\n  const addPulseLayer = (map, sourceId, layerId, data) => {\r\n    if (!map.isStyleLoaded()) {\r\n      map.once('load', () => addPulseLayer(map, sourceId, layerId, data));\r\n      return;\r\n    }\r\n\r\n    if (!map.getSource(sourceId)) {\r\n      map.addSource(sourceId, { type: \"geojson\", data });\r\n    } else {\r\n      map.getSource(sourceId).setData(data);\r\n    }\r\n\r\n    if (!map.getLayer(layerId)) {\r\n      map.addLayer({\r\n        id: layerId,\r\n        type: \"circle\",\r\n        source: sourceId,\r\n        paint: {\r\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"intensity\"], 0, 2, 1, 10],\r\n          \"circle-color\": [\r\n            \"interpolate\",\r\n            [\"linear\"],\r\n            [\"get\", \"intensity\"],\r\n            0, \"#60a5fa\",\r\n            0.3, \"#facc15\",\r\n            0.6, \"#22c55e\",\r\n            1, \"#15803d\",\r\n          ],\r\n          \"circle-opacity\": 0.6,\r\n          \"circle-blur\": 0.7,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const addRegionalNDVILayer = (map, data, sourceId, layerId) => {\r\n    if (!data) return;\r\n    \r\n    if (!map.isStyleLoaded()) {\r\n      map.once('load', () => addRegionalNDVILayer(map, data, sourceId, layerId));\r\n      return;\r\n    }\r\n\r\n    // Check if data has geojson or if it's raw data we need to visualize\r\n    let geojson = data.geojson;\r\n    \r\n    // If no geojson, create a circle to represent the point\r\n    if (!geojson && selectedRegion?.lat && selectedRegion?.lon) {\r\n      geojson = {\r\n        type: \"FeatureCollection\",\r\n        features: [{\r\n          type: \"Feature\",\r\n          geometry: {\r\n            type: \"Point\",\r\n            coordinates: [selectedRegion.lon, selectedRegion.lat]\r\n          },\r\n          properties: {\r\n            ndvi: data.ndvi || 0,\r\n            date: data.date\r\n          }\r\n        }]\r\n      };\r\n    }\r\n\r\n    if (!geojson) return;\r\n    \r\n    if (!map.getSource(sourceId)) {\r\n      map.addSource(sourceId, { type: \"geojson\", data: geojson });\r\n    } else {\r\n      map.getSource(sourceId).setData(geojson);\r\n    }\r\n\r\n    // Determine layer type based on geometry\r\n    const geometryType = geojson.features[0]?.geometry?.type;\r\n\r\n    if (!map.getLayer(layerId)) {\r\n      if (geometryType === \"Point\") {\r\n        // For point data, use circles with size based on NDVI\r\n        map.addLayer({\r\n          id: layerId,\r\n          type: \"circle\",\r\n          source: sourceId,\r\n          paint: {\r\n            \"circle-radius\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"get\", \"ndvi\"],\r\n              0, 20,\r\n              0.5, 40,\r\n              1, 60\r\n            ],\r\n            \"circle-color\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"get\", \"ndvi\"],\r\n              0, \"#ef4444\",\r\n              0.2, \"#f97316\",\r\n              0.4, \"#facc15\",\r\n              0.6, \"#84cc16\",\r\n              0.8, \"#22c55e\",\r\n              1, \"#15803d\",\r\n            ],\r\n            \"circle-opacity\": 0.6,\r\n            \"circle-stroke-width\": 2,\r\n            \"circle-stroke-color\": \"#ffffff\"\r\n          },\r\n        });\r\n      } else {\r\n        // For polygon data, use fill\r\n        map.addLayer({\r\n          id: layerId,\r\n          type: \"fill\",\r\n          source: sourceId,\r\n          paint: {\r\n            \"fill-color\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"get\", \"ndvi\"],\r\n              0, \"#ef4444\",\r\n              0.2, \"#f97316\",\r\n              0.4, \"#facc15\",\r\n              0.6, \"#84cc16\",\r\n              0.8, \"#22c55e\",\r\n              1, \"#15803d\",\r\n            ],\r\n            \"fill-opacity\": 0.7,\r\n          },\r\n        });\r\n        \r\n        // Add outline\r\n        if (!map.getLayer(layerId + \"-outline\")) {\r\n          map.addLayer({\r\n            id: layerId + \"-outline\",\r\n            type: \"line\",\r\n            source: sourceId,\r\n            paint: {\r\n              \"line-color\": \"#ffffff\",\r\n              \"line-width\": 2,\r\n            },\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // ✅ Regional comparison map setup\r\n  useEffect(() => {\r\n    if (regionalCompareMode && compareContainer.current && regionData.length > 0) {\r\n      if (!compareMapRef.current) {\r\n        const compareMap = new mapboxgl.Map({\r\n          container: compareContainer.current,\r\n          style: \"mapbox://styles/mapbox/satellite-v9\",\r\n          center: [selectedRegion.lon || 0, selectedRegion.lat || 0],\r\n          zoom: 12,\r\n        });\r\n        compareMapRef.current = compareMap;\r\n\r\n        compareMap.on(\"load\", () => {\r\n          updateComparisonView();\r\n        });\r\n      }\r\n      return () => {\r\n        if (compareMapRef.current) {\r\n          compareMapRef.current.remove();\r\n          compareMapRef.current = null;\r\n        }\r\n      };\r\n    }\r\n  }, [regionalCompareMode, regionData]);\r\n\r\n  const updateComparisonView = () => {\r\n    if (!compareMapRef.current || regionData.length === 0) return;\r\n    if (!compareMapRef.current.isStyleLoaded()) {\r\n      compareMapRef.current.once('load', updateComparisonView);\r\n      return;\r\n    }\r\n\r\n    const beforeData = regionData[beforeDateIndex];\r\n    const afterData = regionData[afterDateIndex];\r\n\r\n    // Add both layers\r\n    addRegionalNDVILayer(\r\n      compareMapRef.current,\r\n      beforeData,\r\n      \"before-source\",\r\n      \"before-layer\"\r\n    );\r\n\r\n    addRegionalNDVILayer(\r\n      compareMapRef.current,\r\n      afterData,\r\n      \"after-source\",\r\n      \"after-layer\"\r\n    );\r\n\r\n    // Create clip path effect using map bounds\r\n    const canvas = compareMapRef.current.getCanvas();\r\n    const width = canvas.width;\r\n    const clipX = (sliderPosition / 100) * width;\r\n\r\n    // Use paint property to fade layers based on position\r\n    if (compareMapRef.current.getLayer(\"after-layer\")) {\r\n      // This is a simplified approach - we'll use opacity transition\r\n      const afterOpacity = sliderPosition / 100;\r\n      const beforeOpacity = 1 - (sliderPosition / 100);\r\n      \r\n      compareMapRef.current.setPaintProperty(\"before-layer\", \"circle-opacity\", beforeOpacity * 0.6);\r\n      compareMapRef.current.setPaintProperty(\"after-layer\", \"circle-opacity\", afterOpacity * 0.6);\r\n      \r\n      // For fill layers\r\n      if (regionData[0]?.geojson?.features[0]?.geometry?.type !== \"Point\") {\r\n        compareMapRef.current.setPaintProperty(\"before-layer\", \"fill-opacity\", beforeOpacity * 0.7);\r\n        compareMapRef.current.setPaintProperty(\"after-layer\", \"fill-opacity\", afterOpacity * 0.7);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (regionalCompareMode && compareMapRef.current) {\r\n      updateComparisonView();\r\n    }\r\n  }, [beforeDateIndex, afterDateIndex, sliderPosition, regionalCompareMode]);\r\n\r\n  // ✅ Init maps & interactions\r\n  useEffect(() => {\r\n    if (!leftMapContainer.current) return;\r\n\r\n    const createMap = (container) => {\r\n      const map = new mapboxgl.Map({\r\n        container,\r\n        style: \"mapbox://styles/mapbox/light-v11\",\r\n        center: [0, 20],\r\n        zoom: 1.5,\r\n      });\r\n      return map;\r\n    };\r\n\r\n    const leftMap = createMap(leftMapContainer.current);\r\n    leftMapRef.current = leftMap;\r\n\r\n    if (globalCompareMode && rightMapContainer.current) {\r\n      const rightMap = createMap(rightMapContainer.current);\r\n      rightMapRef.current = rightMap;\r\n    }\r\n\r\n    const draw = new MapboxDraw({\r\n      displayControlsDefault: false,\r\n      controls: { \r\n        polygon: true, \r\n        trash: true \r\n      },\r\n      styles: [\r\n        {\r\n          'id': 'gl-draw-polygon-fill',\r\n          'type': 'fill',\r\n          'paint': {\r\n            'fill-color': '#10b981',\r\n            'fill-opacity': 0.3\r\n          }\r\n        },\r\n        {\r\n          'id': 'gl-draw-polygon-stroke-active',\r\n          'type': 'line',\r\n          'paint': {\r\n            'line-color': '#10b981',\r\n            'line-width': 3\r\n          }\r\n        },\r\n        {\r\n          'id': 'gl-draw-line',\r\n          'type': 'line',\r\n          'paint': {\r\n            'line-color': '#10b981',\r\n            'line-width': 3\r\n          }\r\n        },\r\n        {\r\n          'id': 'gl-draw-polygon-and-line-vertex-active',\r\n          'type': 'circle',\r\n          'paint': {\r\n            'circle-radius': 6,\r\n            'circle-color': '#ffffff',\r\n            'circle-stroke-color': '#10b981',\r\n            'circle-stroke-width': 2\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    leftMap.addControl(draw, 'top-left');\r\n\r\n    leftMap.on(\"click\", async (e) => {\r\n      const { lng, lat } = e.lngLat;\r\n\r\n      new mapboxgl.Marker({ color: \"lime\" }).setLngLat([lng, lat]).addTo(leftMap);\r\n\r\n      try {\r\n        const res = await api.get(\"/ndvi/point\", {\r\n          params: { \r\n            lat, \r\n            lon: lng, \r\n            start: \"2024-03-01\", \r\n            end: \"2024-05-31\", \r\n            buffer: 1000 \r\n          },\r\n        });\r\n        setSelectedRegion({ lat, lon: lng });\r\n        setRegionData(res.data.data);\r\n        setBeforeDateIndex(0);\r\n        setAfterDateIndex(res.data.data.length - 1);\r\n        setShowDatePicker(true);\r\n      } catch (err) {\r\n        console.error(\"Error fetching point NDVI:\", err);\r\n      }\r\n    });\r\n\r\n    leftMap.on(\"draw.create\", async (e) => {\r\n      const coords = e.features[0].geometry.coordinates[0];\r\n      const lons = coords.map((c) => c[0]);\r\n      const lats = coords.map((c) => c[1]);\r\n      const bbox = [Math.min(...lons), Math.min(...lats), Math.max(...lons), Math.max(...lats)];\r\n\r\n      try {\r\n        const res = await api.get(\"/ndvi/regional\", {\r\n          params: { bbox: bbox.join(\",\"), start: \"2024-03-01\", end: \"2024-05-31\" },\r\n        });\r\n        setSelectedRegion({ bbox, lon: (bbox[0] + bbox[2]) / 2, lat: (bbox[1] + bbox[3]) / 2 });\r\n        setRegionData(res.data.data);\r\n        setBeforeDateIndex(0);\r\n        setAfterDateIndex(res.data.data.length - 1);\r\n        setShowDatePicker(true);\r\n      } catch (err) {\r\n        console.error(\"Error fetching regional NDVI:\", err);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (leftMapRef.current) {\r\n        leftMapRef.current.remove();\r\n        leftMapRef.current = null;\r\n      }\r\n      if (rightMapRef.current) {\r\n        rightMapRef.current.remove();\r\n        rightMapRef.current = null;\r\n      }\r\n    };\r\n  }, [globalCompareMode]);\r\n\r\n  // ✅ Animate pulses (stop when in regional compare mode)\r\n  useEffect(() => {\r\n    if (!leftMapRef.current || ndviData.length === 0 || regionalCompareMode || showDatePicker) return;\r\n\r\n    if (globalCompareMode && selectedLeftDate !== null && selectedRightDate !== null) {\r\n      const leftData = ndviData[selectedLeftDate];\r\n      const rightData = ndviData[selectedRightDate];\r\n\r\n      if (leftData) {\r\n        const pulseData = generatePulseData(leftData.ndvi, leftData.date);\r\n        addPulseLayer(leftMapRef.current, \"ndvi-source-left\", \"ndvi-layer-left\", pulseData);\r\n      }\r\n\r\n      if (rightData && rightMapRef.current) {\r\n        const pulseData = generatePulseData(rightData.ndvi, rightData.date);\r\n        addPulseLayer(rightMapRef.current, \"ndvi-source-right\", \"ndvi-layer-right\", pulseData);\r\n      }\r\n    } else if (!globalCompareMode) {\r\n      let i = 0;\r\n      const interval = setInterval(() => {\r\n        i = (i + 1) % ndviData.length;\r\n        setFrame(i);\r\n\r\n        const { ndvi, date } = ndviData[i];\r\n        const pulseData = generatePulseData(ndvi, date);\r\n\r\n        addPulseLayer(leftMapRef.current, \"ndvi-source-left\", \"ndvi-layer-left\", pulseData);\r\n      }, 1500);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [ndviData, globalCompareMode, selectedLeftDate, selectedRightDate, regionalCompareMode, showDatePicker]);\r\n\r\n  const handleSliderDrag = (e) => {\r\n    if (!compareContainer.current) return;\r\n    const rect = compareContainer.current.getBoundingClientRect();\r\n    const x = Math.max(0, Math.min(e.clientX - rect.left, rect.width));\r\n    const percentage = (x / rect.width) * 100;\r\n    setSliderPosition(percentage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex w-full h-screen relative\">\r\n      {!regionalCompareMode ? (\r\n        <>\r\n          <div ref={leftMapContainer} className=\"flex-1\" />\r\n          {globalCompareMode && (\r\n            <div ref={rightMapContainer} className=\"flex-1 border-l-2 border-gray-400\" />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"relative w-full h-full\">\r\n          <div ref={compareContainer} className=\"w-full h-full\" />\r\n          \r\n          <div\r\n            ref={sliderRef}\r\n            className=\"absolute top-0 bottom-0 w-1 bg-white shadow-2xl cursor-ew-resize z-20\"\r\n            style={{ left: `${sliderPosition}%`, transform: 'translateX(-50%)' }}\r\n            onMouseDown={(e) => {\r\n              e.preventDefault();\r\n              const handleMouseMove = (moveEvent) => {\r\n                handleSliderDrag(moveEvent);\r\n              };\r\n              const handleMouseUp = () => {\r\n                document.removeEventListener(\"mousemove\", handleMouseMove);\r\n                document.removeEventListener(\"mouseup\", handleMouseUp);\r\n              };\r\n              document.addEventListener(\"mousemove\", handleMouseMove);\r\n              document.addEventListener(\"mouseup\", handleMouseUp);\r\n            }}\r\n          >\r\n            <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white rounded-full p-3 shadow-2xl border-2 border-gray-300\">\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\">\r\n                <path d=\"M18 8L22 12L18 16M6 8L2 12L6 16\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"absolute top-4 left-4 bg-gradient-to-r from-blue-600 to-blue-500 text-white px-4 py-2 rounded-lg shadow-lg\">\r\n            <p className=\"text-sm font-bold\">📅 {regionData[beforeDateIndex]?.date}</p>\r\n            <p className=\"text-xs opacity-90\">NDVI: {regionData[beforeDateIndex]?.ndvi?.toFixed(3) || 'N/A'}</p>\r\n          </div>\r\n          <div className=\"absolute top-4 right-4 bg-gradient-to-r from-green-600 to-green-500 text-white px-4 py-2 rounded-lg shadow-lg\">\r\n            <p className=\"text-sm font-bold\">📅 {regionData[afterDateIndex]?.date}</p>\r\n            <p className=\"text-xs opacity-90\">NDVI: {regionData[afterDateIndex]?.ndvi?.toFixed(3) || 'N/A'}</p>\r\n          </div>\r\n\r\n          <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-black/80 text-white px-4 py-2 rounded-lg text-xs\">\r\n            ← Slide to compare | {Math.round(100 - sliderPosition)}% Before | {Math.round(sliderPosition)}% After →\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions Panel */}\r\n      {!regionalCompareMode && !showDatePicker && (\r\n        <div className=\"absolute top-4 left-4 bg-white/95 backdrop-blur rounded-xl shadow-xl p-4 max-w-xs\">\r\n          <h3 className=\"font-bold text-gray-800 mb-2 flex items-center gap-2\">\r\n            <span className=\"text-lg\">🗺️</span>\r\n            How to Use\r\n          </h3>\r\n          <div className=\"space-y-2 text-sm text-gray-700\">\r\n            <div className=\"flex items-start gap-2\">\r\n              <span className=\"text-blue-500 font-bold\">1.</span>\r\n              <p><strong>Click anywhere</strong> on the map to analyze a specific point</p>\r\n            </div>\r\n            <div className=\"flex items-start gap-2\">\r\n              <span className=\"text-green-500 font-bold\">2.</span>\r\n              <p><strong>Draw a region:</strong> Click the <span className=\"inline-block w-5 h-5 border-2 border-green-500 rounded\"></span> polygon tool (top-left), then click multiple points to draw. Double-click to finish.</p>\r\n            </div>\r\n            <div className=\"flex items-start gap-2\">\r\n              <span className=\"text-purple-500 font-bold\">3.</span>\r\n              <p>Select dates to compare vegetation changes over time</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* HUD */}\r\n      {!regionalCompareMode && !showDatePicker && ndviData.length > 0 && (\r\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-white/80 px-4 py-2 rounded-lg shadow\">\r\n          <p className=\"text-sm font-semibold\">\r\n            📅 {ndviData[frame]?.date} | 🌱 NDVI: {ndviData[frame]?.ndvi.toFixed(3)}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"absolute top-4 right-4 flex flex-col gap-2\">\r\n        {!regionalCompareMode && !showDatePicker && (\r\n          <button\r\n            onClick={() => {\r\n              setGlobalCompareMode(!globalCompareMode);\r\n              if (!globalCompareMode) {\r\n                setSelectedLeftDate(0);\r\n                setSelectedRightDate(ndviData.length - 1);\r\n              }\r\n            }}\r\n            className=\"bg-emerald-500 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-emerald-600\"\r\n          >\r\n            {globalCompareMode ? \"Exit Global Compare\" : \"Global Compare\"}\r\n          </button>\r\n        )}\r\n        \r\n        {regionalCompareMode && (\r\n          <button\r\n            onClick={() => {\r\n              setRegionalCompareMode(false);\r\n              setShowDatePicker(false);\r\n            }}\r\n            className=\"bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-red-600\"\r\n          >\r\n            Exit Regional Compare\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Date Picker Modal */}\r\n      {showDatePicker && regionData.length > 0 && !regionalCompareMode && (\r\n        <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-2xl p-8 max-w-2xl w-full mx-4 shadow-2xl\">\r\n            <h2 className=\"text-2xl font-bold mb-6 text-gray-800\">Select Dates to Compare</h2>\r\n            \r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                  Before Date (Older Period)\r\n                </label>\r\n                <select\r\n                  value={beforeDateIndex}\r\n                  onChange={(e) => setBeforeDateIndex(parseInt(e.target.value))}\r\n                  className=\"w-full px-4 py-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:outline-none\"\r\n                >\r\n                  {regionData.map((item, idx) => (\r\n                    <option key={idx} value={idx}>\r\n                      {item.date} - NDVI: {item.ndvi?.toFixed(3) || 'N/A'}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\r\n                  After Date (Recent Period)\r\n                </label>\r\n                <select\r\n                  value={afterDateIndex}\r\n                  onChange={(e) => setAfterDateIndex(parseInt(e.target.value))}\r\n                  className=\"w-full px-4 py-3 border-2 border-gray-300 rounded-lg focus:border-green-500 focus:outline-none\"\r\n                >\r\n                  {regionData.map((item, idx) => (\r\n                    <option key={idx} value={idx}>\r\n                      {item.date} - NDVI: {item.ndvi?.toFixed(3) || 'N/A'}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-4 mt-8\">\r\n              <button\r\n                onClick={() => setShowDatePicker(false)}\r\n                className=\"flex-1 px-6 py-3 bg-gray-200 text-gray-700 rounded-lg font-semibold hover:bg-gray-300\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setShowDatePicker(false);\r\n                  setRegionalCompareMode(true);\r\n                }}\r\n                className=\"flex-1 px-6 py-3 bg-gradient-to-r from-blue-500 to-green-500 text-white rounded-lg font-semibold hover:from-blue-600 hover:to-green-600\"\r\n              >\r\n                Compare →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Global comparison controls */}\r\n      {globalCompareMode && ndviData.length > 0 && (\r\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 w-[80%] max-w-4xl bg-black/80 p-6 rounded-2xl shadow-2xl\">\r\n          <div className=\"grid grid-cols-2 gap-8\">\r\n            <div>\r\n              <h3 className=\"text-white text-lg mb-3\">Left Map Period</h3>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max={ndviData.length - 1}\r\n                value={selectedLeftDate}\r\n                onChange={(e) => setSelectedLeftDate(parseInt(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\r\n              />\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                {ndviData[selectedLeftDate]?.date} → NDVI {ndviData[selectedLeftDate]?.ndvi.toFixed(3)}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-white text-lg mb-3\">Right Map Period</h3>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max={ndviData.length - 1}\r\n                value={selectedRightDate}\r\n                onChange={(e) => setSelectedRightDate(parseInt(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\r\n              />\r\n              <div className=\"mt-2 text-sm text-gray-400\">\r\n                {ndviData[selectedRightDate]?.date} → NDVI {ndviData[selectedRightDate]?.ndvi.toFixed(3)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}