{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/BloomingMap.js"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./geocoderCustomStyle.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport axios from \"axios\";\n\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 60000,\n});\n\n// Generate ~300 random global points\nconst generateRandomPoints = (count = 300) => {\n  const points = [];\n  for (let i = 0; i < count; i++) {\n    const lat = Math.random() * 180 - 90;\n    const lon = Math.random() * 360 - 180;\n    points.push([lon, lat]);\n  }\n  return points;\n};\nconst globalPoints = generateRandomPoints();\n\nexport default function BloomingMap({ compareMode, onResetCompareMode }) {\n  const leftMapContainer = useRef(null);\n  const rightMapContainer = useRef(null);\n  const compareContainer = useRef(null);\n  const leftMapRef = useRef(null);\n  const rightMapRef = useRef(null);\n  const compareMapRef = useRef(null);\n  const sliderRef = useRef(null);\n\n  const [ndviData, setNdviData] = useState([]);\n  const [frame, setFrame] = useState(0);\n  const [globalCompareMode, setGlobalCompareMode] = useState(false);\n  const [pointCompareMode, setPointCompareMode] = useState(false);\n\n  const [selectedLeftDate, setSelectedLeftDate] = useState(null);\n  const [selectedRightDate, setSelectedRightDate] = useState(null);\n\n  const [selectedPoints, setSelectedPoints] = useState({\n    first: null,\n    second: null,\n  });\n  const [pointData, setPointData] = useState({\n    first: [],\n    second: [],\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Update comparison handling based on mode\n  useEffect(() => {\n    if (!compareMode) return;\n\n    switch (compareMode.type) {\n      case \"global\":\n        setGlobalCompareMode(true);\n        // Initialize with start/end dates from dateRange\n        if (ndviData.length > 0) {\n          setSelectedLeftDate(0);\n          setSelectedRightDate(ndviData.length - 1);\n        }\n        break;\n      case \"point\":\n        setPointCompareMode(true);\n        break;\n      case \"export\":\n        // Will be implemented later\n        console.log(\"Export functionality coming soon\");\n        break;\n    }\n  }, [compareMode]);\n\n  // ✅ Fetch global NDVI\n  useEffect(() => {\n    const fetchNDVI = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const res = await api.get(\"/ndvi/global\", {\n          params: {\n            start: compareMode?.dateRange?.start,\n            end: compareMode?.dateRange?.end,\n          },\n        });\n        const data = res.data.data || res.data;\n        if (Array.isArray(data) && data.length > 0) {\n          setNdviData(data);\n        } else {\n          throw new Error(\"Invalid NDVI data format\");\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Error fetching NDVI:\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchNDVI();\n  }, [compareMode?.dateRange]);\n\n  const generatePulseData = (ndviValue, date) => ({\n    type: \"FeatureCollection\",\n    features: globalPoints.map(([lon, lat]) => ({\n      type: \"Feature\",\n      geometry: { type: \"Point\", coordinates: [lon, lat] },\n      properties: {\n        ndvi: ndviValue,\n        date,\n        intensity: Math.max(0, Math.min(1, (ndviValue - 0.28) / 0.22)),\n      },\n    })),\n  });\n\n  const addPulseLayer = (map, sourceId, layerId, data) => {\n    // Check if map is loaded\n    if (!map.isStyleLoaded()) {\n      map.once(\"load\", () => addPulseLayer(map, sourceId, layerId, data));\n      return;\n    }\n\n    if (!map.getSource(sourceId)) {\n      map.addSource(sourceId, { type: \"geojson\", data });\n    } else {\n      map.getSource(sourceId).setData(data);\n    }\n\n    if (!map.getLayer(layerId)) {\n      map.addLayer({\n        id: layerId,\n        type: \"circle\",\n        source: sourceId,\n        paint: {\n          \"circle-radius\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"get\", \"intensity\"],\n            0,\n            2,\n            1,\n            10,\n          ],\n          \"circle-color\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"get\", \"intensity\"],\n            0,\n            \"#60a5fa\",\n            0.3,\n            \"#facc15\",\n            0.6,\n            \"#22c55e\",\n            1,\n            \"#15803d\",\n          ],\n          \"circle-opacity\": 0.6,\n          \"circle-blur\": 0.7,\n        },\n      });\n    }\n  };\n\n  // ✅ Init maps & interactions\n  useEffect(() => {\n    if (!leftMapContainer.current) return;\n\n    const createMap = (container) => {\n      const map = new mapboxgl.Map({\n        container,\n        style: \"mapbox://styles/mapbox/light-v11\",\n        center: [0, 20],\n        zoom: 1.5,\n      });\n      return map;\n    };\n\n    // Always create the left map\n    const leftMap = createMap(leftMapContainer.current);\n    leftMapRef.current = leftMap;\n    leftMapRef.current.addControl(\n      new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        useBrowserFocus: true,\n        mapboxgl: mapboxgl,\n      }),\n      \"top-left\"\n    );\n\n    // Create right map for global compare\n    if (globalCompareMode && rightMapContainer.current) {\n      const rightMap = createMap(rightMapContainer.current);\n      rightMapRef.current = rightMap;\n      rightMapRef.current.addControl(\n        new MapboxGeocoder({\n          accessToken: mapboxgl.accessToken,\n          useBrowserFocus: true,\n          mapboxgl: mapboxgl,\n        }),\n        \"top-left\"\n      );\n    }\n\n    // Point comparison click handler\n    const clickHandler = async (e) => {\n      if (!pointCompareMode) return;\n\n      const { lng, lat } = e.lngLat;\n      const color = !selectedPoints.first ? \"#2563eb\" : \"#16a34a\";\n\n      new mapboxgl.Marker({ color })\n        .setLngLat([lng, lat])\n        .addTo(leftMapRef.current);\n\n      try {\n        const res = await api.get(\"/ndvi/point\", {\n          params: {\n            lat,\n            lon: lng,\n            start: compareMode?.dateRange?.start,\n            end: compareMode?.dateRange?.end,\n            buffer: 1000,\n          },\n        });\n\n        if (!selectedPoints.first) {\n          setSelectedPoints((prev) => ({ ...prev, first: { lat, lon: lng } }));\n          setPointData((prev) => ({ ...prev, first: res.data.data }));\n        } else if (!selectedPoints.second) {\n          setSelectedPoints((prev) => ({ ...prev, second: { lat, lon: lng } }));\n          setPointData((prev) => ({ ...prev, second: res.data.data }));\n        }\n      } catch (err) {\n        console.error(\"Error fetching point NDVI:\", err);\n      }\n    };\n\n    if (leftMapRef.current) {\n      leftMapRef.current.on(\"click\", clickHandler);\n    }\n\n    // Improved cleanup function\n    return () => {\n      // Remove click handler\n      if (leftMapRef.current) {\n        leftMapRef.current.off(\"click\", clickHandler);\n      }\n\n      // Only remove maps when exiting comparison mode completely\n      if (!globalCompareMode && !pointCompareMode) {\n        if (leftMapRef.current) {\n          leftMapRef.current.remove();\n          leftMapRef.current = null;\n        }\n        if (rightMapRef.current) {\n          rightMapRef.current.remove();\n          rightMapRef.current = null;\n        }\n      }\n    };\n  }, [globalCompareMode, pointCompareMode, compareMode?.dateRange]);\n\n  // ✅ Animate pulses (stop when in regional compare mode)\n  useEffect(() => {\n    if (!leftMapRef.current || ndviData.length === 0 || pointCompareMode)\n      return;\n\n    if (\n      globalCompareMode &&\n      selectedLeftDate !== null &&\n      selectedRightDate !== null\n    ) {\n      const leftData = ndviData[selectedLeftDate];\n      const rightData = ndviData[selectedRightDate];\n\n      if (leftData) {\n        const pulseData = generatePulseData(leftData.ndvi, leftData.date);\n        addPulseLayer(\n          leftMapRef.current,\n          \"ndvi-source-left\",\n          \"ndvi-layer-left\",\n          pulseData\n        );\n      }\n\n      if (rightData && rightMapRef.current) {\n        const pulseData = generatePulseData(rightData.ndvi, rightData.date);\n        addPulseLayer(\n          rightMapRef.current,\n          \"ndvi-source-right\",\n          \"ndvi-layer-right\",\n          pulseData\n        );\n      }\n    } else if (!globalCompareMode) {\n      let i = 0;\n      const interval = setInterval(() => {\n        i = (i + 1) % ndviData.length;\n        setFrame(i);\n\n        const { ndvi, date } = ndviData[i];\n        const pulseData = generatePulseData(ndvi, date);\n\n        addPulseLayer(\n          leftMapRef.current,\n          \"ndvi-source-left\",\n          \"ndvi-layer-left\",\n          pulseData\n        );\n      }, 1500);\n\n      return () => clearInterval(interval);\n    }\n  }, [\n    ndviData,\n    globalCompareMode,\n    selectedLeftDate,\n    selectedRightDate,\n    pointCompareMode,\n  ]);\n\n  const handleSliderDrag = (e) => {\n    if (!compareContainer.current) return;\n    const rect = compareContainer.current.getBoundingClientRect();\n    const x = Math.max(0, Math.min(e.clientX - rect.left, rect.width));\n    const percentage = (x / rect.width) * 100;\n    setSliderPosition(percentage);\n  };\n\n  // Update ExitButton to properly reset everything\n  const ExitButton = () => (\n    <button\n      onClick={() => {\n        // Reset all comparison states\n        setGlobalCompareMode(false);\n        setPointCompareMode(false);\n        setSelectedPoints({ first: null, second: null });\n        setPointData({ first: [], second: [] });\n        setSelectedLeftDate(null);\n        setSelectedRightDate(null);\n\n        // Remove maps\n        if (leftMapRef.current) {\n          leftMapRef.current.remove();\n          leftMapRef.current = null;\n        }\n        if (rightMapRef.current) {\n          rightMapRef.current.remove();\n          rightMapRef.current = null;\n        }\n\n        // Reset parent component state\n        if (onResetCompareMode) onResetCompareMode();\n      }}\n      className=\"absolute top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-red-600 transition-colors z-50\"\n    >\n      Exit Comparison\n    </button>\n  );\n\n  return (\n    <div className=\"flex w-full h-screen relative\">\n      {isLoading && (\n        <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-4 rounded-lg shadow-lg\">\n            <p className=\"text-lg font-semibold\">Loading NDVI data...</p>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"absolute top-4 left-1/2 -translate-x-1/2 bg-red-500 text-white px-4 py-2 rounded-lg\">\n          {error}\n        </div>\n      )}\n\n      <div ref={leftMapContainer} className=\"flex-1\" />\n      {globalCompareMode && (\n        <div\n          ref={rightMapContainer}\n          className=\"flex-1 border-l-2 border-gray-400\"\n        />\n      )}\n\n      {/* Base map time slider HUD */}\n      {!globalCompareMode && !pointCompareMode && ndviData.length > 0 && (\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-white/80 px-4 py-2 rounded-lg shadow\">\n          <p className=\"text-sm font-semibold\">\n            📅 {ndviData[frame]?.date} | 🌱 NDVI:{\" \"}\n            {ndviData[frame]?.ndvi.toFixed(3)}\n          </p>\n        </div>\n      )}\n\n      {/* Point comparison chart */}\n      {pointCompareMode && selectedPoints.first && selectedPoints.second && (\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 w-[80%] max-w-4xl bg-black/80 p-6 rounded-2xl shadow-2xl\">\n          <div className=\"grid grid-cols-2 gap-8\">\n            <div>\n              <h3 className=\"text-white text-lg mb-3 flex items-center\">\n                <span className=\"w-4 h-4 rounded-full bg-blue-600 mr-2\"></span>\n                Point 1 NDVI Trend\n              </h3>\n              <div className=\"text-gray-400 text-sm\">\n                {pointData.first.map((data, i) => (\n                  <div key={i}>\n                    {data.date}: {data.ndvi.toFixed(3)}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h3 className=\"text-white text-lg mb-3 flex items-center\">\n                <span className=\"w-4 h-4 rounded-full bg-green-600 mr-2\"></span>\n                Point 2 NDVI Trend\n              </h3>\n              <div className=\"text-gray-400 text-sm\">\n                {pointData.second.map((data, i) => (\n                  <div key={i}>\n                    {data.date}: {data.ndvi.toFixed(3)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {(globalCompareMode || pointCompareMode) && <ExitButton />}\n\n      {/* Global comparison controls */}\n      {globalCompareMode && ndviData.length > 0 && (\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 w-[80%] max-w-4xl bg-black/80 p-6 rounded-2xl shadow-2xl\">\n          <div className=\"grid grid-cols-2 gap-8\">\n            <div>\n              <h3 className=\"text-white text-lg mb-3\">Left Map Period</h3>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max={ndviData.length - 1}\n                value={selectedLeftDate}\n                onChange={(e) => setSelectedLeftDate(parseInt(e.target.value))}\n                className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\n              />\n              <div className=\"mt-2 text-sm text-gray-400\">\n                {ndviData[selectedLeftDate]?.date} → NDVI{\" \"}\n                {ndviData[selectedLeftDate]?.ndvi.toFixed(3)}\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-white text-lg mb-3\">Right Map Period</h3>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max={ndviData.length - 1}\n                value={selectedRightDate}\n                onChange={(e) => setSelectedRightDate(parseInt(e.target.value))}\n                className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\n              />\n              <div className=\"mt-2 text-sm text-gray-400\">\n                {ndviData[selectedRightDate]?.date} → NDVI{\" \"}\n                {ndviData[selectedRightDate]?.ndvi.toFixed(3)}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/gallery/gallleryItem.js"],"sourcesContent":["import React from \"react\";\n\nconst GalleryItem = ({ name, imageUrl, onClick }) => {\n  return (\n    <div\n      onClick={onClick}\n      className=\"flex flex-col items-center justify-center w-20 m-2 cursor-pointer hover:scale-105 transition\"\n    >\n      <img src={imageUrl} alt={name} className=\"w-18 h-auto mb-1\" />\n      <p className=\"text-xs text-center\">{name}</p>\n    </div>\n  );\n};\n\nexport default GalleryItem;\n"],"names":[],"mappings":";;;;;AAAA;;;AAEA,MAAM,cAAc;QAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC9C,qBACE,0PAAC;QACC,SAAS;QACT,WAAU;;0BAEV,0PAAC;gBAAI,KAAK;gBAAU,KAAK;gBAAM,WAAU;;;;;;0BACzC,0PAAC;gBAAE,WAAU;0BAAuB;;;;;;;;;;;;AAG1C;KAVM;uCAYS","debugId":null}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/gallery/infoModal.js"],"sourcesContent":["import React from \"react\";\n\nconst InfoModal = ({ flower, onClose }) => {\n  if (!flower) return null;\n\n  return (\n    <div className=\"flex-row text-center w-80 p-4 justify-center bg-secondary\">\n      <div className=\"h-full overflow-hidden\">\n        <button\n          onClick={onClose}\n          className=\"mb-4 px-3 py-1 bg-highlight text-white font-bold rounded-3xl self-start\"\n        >\n            Explore other species\n        </button>\n        <img\n          src={flower.image_url}\n          alt={flower.name}\n          className=\"w-40 mx-auto mb-3\"\n        />\n        <h2 className=\"text-lg font-bold mb-2\">{flower.name}</h2>\n        <p className=\"italic mb-2\"><strong>Scientific Name:</strong> {flower.scientific_name}</p>\n        <p className=\"text-sm mb-2\">\n          <strong>Origin:</strong> {flower.origin}\n        </p>\n        <p className=\"text-sm\">\n          <strong>Description:</strong> {flower.description}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoModal;\n"],"names":[],"mappings":";;;;;AAAA;;;AAEA,MAAM,YAAY;QAAC,EAAE,MAAM,EAAE,OAAO,EAAE;IACpC,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,0PAAC;QAAI,WAAU;kBACb,cAAA,0PAAC;YAAI,WAAU;;8BACb,0PAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;8BAGD,0PAAC;oBACC,KAAK,OAAO,SAAS;oBACrB,KAAK,OAAO,IAAI;oBAChB,WAAU;;;;;;8BAEZ,0PAAC;oBAAG,WAAU;8BAA0B,OAAO,IAAI;;;;;;8BACnD,0PAAC;oBAAE,WAAU;;sCAAc,0PAAC;sCAAO;;;;;;wBAAyB;wBAAE,OAAO,eAAe;;;;;;;8BACpF,0PAAC;oBAAE,WAAU;;sCACX,0PAAC;sCAAO;;;;;;wBAAgB;wBAAE,OAAO,MAAM;;;;;;;8BAEzC,0PAAC;oBAAE,WAAU;;sCACX,0PAAC;sCAAO;;;;;;wBAAqB;wBAAE,OAAO,WAAW;;;;;;;;;;;;;;;;;;AAK3D;KA5BM;uCA8BS","debugId":null}},
    {"offset": {"line": 875, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/gallery/speciesGallery.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport GalleryItem from \"./gallleryItem\";\nimport InfoModal from \"./infoModal\";\n\nlet species = [\n  {\n    name: \"California wildrose\",\n    scientific_name: \"Rosa californica\",\n    origin: \"Western North America (California, Oregon, Baja California)\",\n    description:\n      \"A native wild rose with pink fragrant blooms and thorny stems. Often used in erosion control and natural landscaping. Symbolizes resilience and natural beauty.\",\n    image_url:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0e/Rosa_californica_2004-07-20.jpg/1920px-Rosa_californica_2004-07-20.jpg\",\n  },\n  {\n    name: \"Carolina spiderlily\",\n    scientific_name: \"Hymenocallis occidentalis\",\n    origin: \"Southeastern United States\",\n    description:\n      \"A striking perennial with spider-like white flowers and long, narrow petals. Commonly found in moist woodlands and riverbanks. Symbolizes purity and elegance.\",\n    image_url:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/75/Hymenocallis_occidentalis_Arkansas.jpg/250px-Hymenocallis_occidentalis_Arkansas.jpg\",\n  },\n  {\n    name: \"Common sunflower\",\n    scientific_name: \"Helianthus annuus\",\n    origin: \"North America\",\n    description:\n      \"A tall, iconic plant with large yellow flower heads that follow the sun (heliotropism). Widely cultivated for seeds and oil. Symbolizes warmth, positivity, and admiration.\",\n    image_url:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/40/Sunflower_sky_backdrop.jpg/250px-Sunflower_sky_backdrop.jpg\",\n  },\n  {\n    name: \"Lady tulip\",\n    scientific_name: \"Tulipa clusiana\",\n    origin: \"Native to Iran, Afghanistan, and the Himalayas\",\n    description:\n      \"A graceful tulip with slender petals that open into a star-like shape, often bicolored in red and white. Popular in ornamental gardens. Symbolizes grace, elegance, and new beginnings.\",\n    image_url:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e2/Tulip_Tulipa_clusiana_%27Lady_Jane%27_Rock_Ledge_Flower_2000px.jpg/250px-Tulip_Tulipa_clusiana_%27Lady_Jane%27_Rock_Ledge_Flower_2000px.jpg\",\n  },\n  // {\n  //   name: \"Woods' rose\",\n  //   scientific_name: \"Rosa woodsii\",\n  //   origin: \"North America (Canada, United States, northern Mexico)\",\n  //   description:\n  //     \"A wild rose species with pink flowers and red hips, often forming dense thickets. Provides habitat and food for wildlife. Symbolizes natural harmony and enduring love.\",\n  //   image_url:\n  //     \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Rosawoodsii.jpg/250px-Rosawoodsii.jpg\",\n  // },\n];\n\nfunction SpeciesGallery() {\n  const [selectedFlower, setSelectedFlower] = useState(null);\n  const gallery = species;\n\n  if (selectedFlower)\n    return (\n      <InfoModal\n        flower={selectedFlower}\n        onClose={() => setSelectedFlower(null)}\n      />\n    );\n  else\n    return (\n      <div\n        id=\"side-bar\"\n        className=\"flex-row text-center w-80 p-4 justify-center bg-primary\"\n      >\n        <h1 className=\"font-bold text-2xl\"></h1>\n        <br></br>\n        <h1 className=\"font-bold text-2xl\"> Search for a species </h1>\n        <hr></hr>\n        <h1> Featured Species</h1>\n        <div\n          id=\"side-bar\"\n          className=\"flex flex-wrap text-center justify-center\"\n        >\n          {gallery.map((flower, index) => (\n            <GalleryItem\n              key={index}\n              name={flower.name}\n              imageUrl={flower.image_url}\n              onClick={() => setSelectedFlower(flower)}\n            />\n          ))}\n        </div>\n        <div></div>\n        <br></br>\n        <h1> All Species</h1>\n        <hr></hr>\n      </div>\n    );\n}\n\nexport default SpeciesGallery;\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;;;;;;;AAEA,IAAI,UAAU;IACZ;QACE,MAAM;QACN,iBAAiB;QACjB,QAAQ;QACR,aACE;QACF,WACE;IACJ;IACA;QACE,MAAM;QACN,iBAAiB;QACjB,QAAQ;QACR,aACE;QACF,WACE;IACJ;IACA;QACE,MAAM;QACN,iBAAiB;QACjB,QAAQ;QACR,aACE;QACF,WACE;IACJ;IACA;QACE,MAAM;QACN,iBAAiB;QACjB,QAAQ;QACR,aACE;QACF,WACE;IACJ;CAUD;AAED,SAAS;;IACP,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,sOAAQ,EAAC;IACrD,MAAM,UAAU;IAEhB,IAAI,gBACF,qBACE,0PAAC,6MAAS;QACR,QAAQ;QACR,SAAS,IAAM,kBAAkB;;;;;;SAIrC,qBACE,0PAAC;QACC,IAAG;QACH,WAAU;;0BAEV,0PAAC;gBAAG,WAAU;;;;;;0BACd,0PAAC;;;;;0BACD,0PAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,0PAAC;;;;;0BACD,0PAAC;0BAAG;;;;;;0BACJ,0PAAC;gBACC,IAAG;gBACH,WAAU;0BAET,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,0PAAC,gNAAW;wBAEV,MAAM,OAAO,IAAI;wBACjB,UAAU,OAAO,SAAS;wBAC1B,SAAS,IAAM,kBAAkB;uBAH5B;;;;;;;;;;0BAOX,0PAAC;;;;;0BACD,0PAAC;;;;;0BACD,0PAAC;0BAAG;;;;;;0BACJ,0PAAC;;;;;;;;;;;AAGT;GAzCS;KAAA;uCA2CM","debugId":null}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/sideBar.js"],"sourcesContent":["import React from \"react\";\nimport SpeciesGallery from \"./gallery/speciesGallery.js\"\n\nfunction SideBar({ showSpecies }) {\n  if (showSpecies) return <SpeciesGallery />;\n  else\n    return (\n      <div id=\"side-bar\" className=\"justify-center w-10 bg-primary duration-500\">\n        <img src=\"./bloom.svg\" className=\"h-10\" />\n      </div>\n    );\n}\n\nexport default SideBar;"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,SAAS,QAAQ,KAAe;QAAf,EAAE,WAAW,EAAE,GAAf;IACf,IAAI,aAAa,qBAAO,0PAAC,kNAAc;;;;;SAErC,qBACE,0PAAC;QAAI,IAAG;QAAW,WAAU;kBAC3B,cAAA,0PAAC;YAAI,KAAI;YAAc,WAAU;;;;;;;;;;;AAGzC;KARS;uCAUM","debugId":null}},
    {"offset": {"line": 1070, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/chart/NDVIChart.js"],"sourcesContent":["\"use client\";\nimport React, { useRef, useImperativeHandle, forwardRef } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n  TimeScale,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-adapter-date-fns\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\n// === NDVI DATA ===\nconst ndviData = [\n  { date: \"2024-01-01\", ndvi: 0.328372877845626 },\n  { date: \"2024-01-17\", ndvi: 0.3133371984834311 },\n  { date: \"2024-02-02\", ndvi: 0.3164387600096921 },\n  { date: \"2024-02-18\", ndvi: 0.31208659739892214 },\n  { date: \"2024-03-05\", ndvi: 0.31966332975949524 },\n  { date: \"2024-03-21\", ndvi: 0.33007922383256183 },\n  { date: \"2024-04-06\", ndvi: 0.35177632452720925 },\n  { date: \"2024-04-22\", ndvi: 0.37442884545118443 },\n  { date: \"2024-05-08\", ndvi: 0.3989218979442026 },\n  { date: \"2024-05-24\", ndvi: 0.4314162413513212 },\n  { date: \"2024-06-09\", ndvi: 0.45418827669947287 },\n  { date: \"2024-06-25\", ndvi: 0.47499360239633026 },\n  { date: \"2024-07-11\", ndvi: 0.47279709475136944 },\n  { date: \"2024-07-27\", ndvi: 0.48198399499941424 },\n  { date: \"2024-08-12\", ndvi: 0.4815237719484111 },\n  { date: \"2024-08-28\", ndvi: 0.46748123043769413 },\n  { date: \"2024-09-13\", ndvi: 0.44788238171909645 },\n  { date: \"2024-09-29\", ndvi: 0.4162884776820417 },\n  { date: \"2024-10-15\", ndvi: 0.3905575547898575 },\n  { date: \"2024-10-31\", ndvi: 0.3633956063834815 },\n  { date: \"2024-11-16\", ndvi: 0.3526573643016067 },\n  { date: \"2024-12-02\", ndvi: 0.34495404214567377 },\n  { date: \"2024-12-18\", ndvi: 0.3352773682018393 },\n];\n\n// === Crosshair Plugin ===\nconst crosshairPlugin = {\n  id: \"crosshair\",\n  afterDatasetsDraw(chart) {\n    const {\n      ctx,\n      tooltip,\n      chartArea: { top, bottom, left, right },\n    } = chart;\n    if (!tooltip?.getActiveElements()?.length) return;\n    const { x, y } = tooltip.getActiveElements()[0].element;\n\n    ctx.save();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"rgba(0,0,0,0.25)\";\n    ctx.setLineDash([3, 3]);\n\n    ctx.beginPath();\n    ctx.moveTo(x, top);\n    ctx.lineTo(x, bottom);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(left, y);\n    ctx.lineTo(right, y);\n    ctx.stroke();\n\n    ctx.restore();\n  },\n};\n\nChartJS.register(crosshairPlugin);\n\n// === COMPONENT ===\nconst NDVIChart = forwardRef((props, ref) => {\n  const chartRef = useRef(null);\n\n  // Export PNG function exposed to parent\n  useImperativeHandle(ref, () => ({\n    exportToPNG() {\n      if (!chartRef.current) return;\n      const imageUrl = chartRef.current.toBase64Image(\"image/png\", 1.0);\n      const link = document.createElement(\"a\");\n      link.href = imageUrl;\n      link.download = \"NDVI_Chart.png\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n  }));\n\n  const data = {\n    labels: ndviData.map((d) => d.date),\n    datasets: [\n      {\n        label: \"NDVI\",\n        data: ndviData.map((d) => d.ndvi.toFixed(3)),\n        fill: true,\n        backgroundColor: (context) => {\n          const ctx = context.chart.ctx;\n          const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n          gradient.addColorStop(0, \"rgba(34,197,94,0.4)\");\n          gradient.addColorStop(1, \"rgba(34,197,94,0.0)\");\n          return gradient;\n        },\n        borderColor: \"rgba(22,163,74,1)\",\n        pointRadius: 3,\n        tension: 0.3,\n        pointBackgroundColor: \"rgba(22,163,74,1)\",\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: { mode: \"nearest\", intersect: false },\n    plugins: {\n      legend: { display: false },\n      tooltip: {\n        enabled: false,\n        external: (context) => {\n          const { chart, tooltip } = context;\n          let tooltipEl = document.getElementById(\"custom-tooltip\");\n          if (!tooltipEl) {\n            tooltipEl = document.createElement(\"div\");\n            tooltipEl.id = \"custom-tooltip\";\n            tooltipEl.className =\n              \"absolute bg-white border border-gray-300 rounded-lg shadow-md p-2 text-sm pointer-events-none\";\n            chart.canvas.parentNode.appendChild(tooltipEl);\n          }\n          if (tooltip.opacity === 0) {\n            tooltipEl.style.opacity = 0;\n            return;\n          }\n          if (tooltip.body) {\n            const { dataIndex } = tooltip.dataPoints[0];\n            const d = ndviData[dataIndex];\n            tooltipEl.innerHTML = `\n              <div><b>${new Date(d.date).toDateString()}</b></div>\n              <div>NDVI: ${d.ndvi.toFixed(3)}</div>\n            `;\n          }\n          const { offsetLeft, offsetTop } = chart.canvas;\n          tooltipEl.style.opacity = 1;\n          tooltipEl.style.left = offsetLeft + tooltip.caretX + 15 + \"px\";\n          tooltipEl.style.top = offsetTop + tooltip.caretY - 30 + \"px\";\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"time\",\n        time: { unit: \"month\", displayFormats: { month: \"MMM\" } },\n        grid: { color: \"rgba(0,0,0,0.05)\" },\n        title: { display: true, text: \"Date\" },\n      },\n      y: {\n        min: 0,\n        max: 1,\n        ticks: { stepSize: 0.1, callback: (v) => v.toFixed(1) },\n        grid: { color: \"rgba(0,0,0,0.05)\" },\n        title: { display: true, text: \"NDVI (0–1.0)\" },\n      },\n    },\n  };\n\n  return (\n    <div className=\"h-full\">\n      <Line ref={chartRef} data={data} options={options} />\n    </div>\n  );\n});\n\nexport default NDVIChart;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1350, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/page.js"],"sourcesContent":["\"use client\";\nimport { useState, useRef } from \"react\";\nimport BloomingMap from \"./BloomingMap\";\nimport React from \"react\";\nimport SideBar from \"./sideBar.js\";\nimport NDVIChart from \"./chart/NDVIChart\";\n\nexport default function Home() {\n  const [showSpecies, setShowSpecies] = useState(false);\n  const [showCompareModal, setShowCompareModal] = useState(false);\n  const [compareMode, setCompareMode] = useState(null);\n  const [showGraph, setShowGraph] = useState(false);\n  const [dateRange, setDateRange] = useState({\n    start: \"2024-01-01\",\n    end: \"2024-12-31\",\n  });\n  const chartRef = useRef(null);\n\n\n  const handleResetCompareMode = () => {\n    setCompareMode(null);\n  };\n\n  return (\n    <main className=\"w-full h-screen flex flex-row justify-center\">\n      <SideBar showSpecies={showSpecies}></SideBar>\n      <div\n        id=\"navigator\"\n        className={`\n          fixed top-[15px] flex z-10 transition-transform duration-300\n          ${showSpecies ? \"translate-x-[200px]\" : \"translate-x-[0px]\"}\n        `}\n      >\n        {/* Species Button */}\n        <div className=\"relative\">\n          <img\n            src=\"./flower.svg\"\n            className=\"absolute my-[5px] mx-[25px] w-10 h-[20px]\"\n            alt=\"flower\"\n          />\n          <button\n            id=\"species\"\n            className=\"h-[30px] mx-[20px] px-[40px] w-40 bg-primary font-bold text-white text-left rounded-3xl\"\n            onClick={() =>\n              setShowSpecies((prev) => {\n                const next = !prev;\n                console.log(\"Sidebar expanded:\", next);\n                return next;\n              })\n            }\n          >\n            Species\n          </button>\n        </div>\n\n        {/* Comparison Button */}\n        <div>\n          <img\n            src=\"./comparison.svg\"\n            className=\"absolute my-[5px] mx-[25px] w-10 h-[20px]\"\n            alt=\"Comparison icon\"\n          />\n          <button\n            id=\"locations\"\n            onClick={() => setShowCompareModal(true)}\n            className=\"h-[30px] mx-[20px] px-[40px] w-40 bg-primary font-bold text-white text-left rounded-3xl\"\n          >\n            Comparison\n          </button>\n        </div>\n      </div>\n\n      {showCompareModal && (\n        <div className=\"absolute inset-0 bg-black/60 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-2xl p-8 w-[500px] shadow-2xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-bold text-gray-800\">\n                Choose Comparison Mode\n              </h2>\n              <button\n                onClick={() => setShowCompareModal(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Date Range\n              </label>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <input\n                  type=\"date\"\n                  value={dateRange.start}\n                  onChange={(e) =>\n                    setDateRange((prev) => ({ ...prev, start: e.target.value }))\n                  }\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md\"\n                />\n                <input\n                  type=\"date\"\n                  value={dateRange.end}\n                  onChange={(e) =>\n                    setDateRange((prev) => ({ ...prev, end: e.target.value }))\n                  }\n                  className=\"block w-full px-3 py-2 border border-gray-300 rounded-md\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex flex-col gap-4\">\n              <button\n                onClick={() => {\n                  setCompareMode({ type: \"global\", dateRange });\n                  setShowCompareModal(false);\n                }}\n                className=\"px-6 py-4 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 font-semibold transition-colors\"\n              >\n                🌍 Global NDVI Comparison\n              </button>\n              <button\n                onClick={() => {\n                  setCompareMode({ type: \"point\", dateRange });\n                  setShowCompareModal(false);\n                }}\n                className=\"px-6 py-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600 font-semibold transition-colors\"\n              >\n                📍 Compare Two Points\n              </button>\n              <button\n                onClick={() => {\n                  setCompareMode({ type: \"export\", dateRange });\n                  setShowCompareModal(false);\n                  setShowGraph((prev) => {\n                    const next = !prev;\n                    return next;\n                  });\n                }}\n                className=\"px-6 py-4 bg-purple-500 text-white rounded-lg hover:bg-purple-600 font-semibold transition-colors\"\n              >\n                📊 Export Analysis Charts\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <BloomingMap\n        compareMode={compareMode}\n        onResetCompareMode={handleResetCompareMode}\n      />\n\n      {showGraph ? (\n        <div className=\"fixed top-40 inset-auto flex-col text-center align-center justify-center w-150 h-[400px] p-4 pb-15 bg-white rounded-2xl shadow-md\">\n          <div className=\"flex w-full justify-between mb-3\">\n            <button\n              className=\"px-3 py-1 bg-highlight text-white font-semibold rounded-3xl\"\n              onClick={() => setShowGraph(false)}\n            >\n              Close\n            </button>\n            <h1 className=\"font-bold text-primary mt-3\">NDVI Value Chart</h1>\n            <button\n              className=\"px-3 py-1 bg-primary text-white font-semibold rounded-3xl\"\n              onClick={() => chartRef.current?.exportToPNG()}\n            >\n              Export Graph\n            </button>\n          </div>\n          <NDVIChart ref={chartRef} />\n        </div>\n      ) : null}\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}