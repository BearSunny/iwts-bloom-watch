{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/htanphuc/Documents/GitHub/iwts-bloom-watch/frontend/src/app/BloomingMap.js"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from 'axios';\n\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 60000,\n});\n\n// Generate ~300 random global points\nconst generateRandomPoints = (count = 300) => {\n  const points = [];\n  for (let i = 0; i < count; i++) {\n    const lat = Math.random() * 180 - 90;\n    const lon = Math.random() * 360 - 180;\n    points.push([lon, lat]);\n  }\n  return points;\n};\nconst globalPoints = generateRandomPoints();\n\nexport default function BloomingMap() {\n  const leftMapContainer = useRef(null);\n  const rightMapContainer = useRef(null);\n  const leftMapRef = useRef(null);\n  const rightMapRef = useRef(null);\n\n  const [ndviData, setNdviData] = useState([]);\n  const [frame, setFrame] = useState(0);\n  const [comparisonMode, setComparisonMode] = useState(false);\n\n  // ðŸ”¹ Extra states for point/region\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [regionData, setRegionData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // âœ… Fetch global NDVI\n  useEffect(() => {\n    const fetchNDVI = async () => {\n      try {\n        const res = await api.get(\"/ndvi/global\");\n        setNdviData(res.data.data); // [{date, ndvi}]\n      } catch (err) {\n        console.error(\"Error fetching NDVI:\", err);\n      }\n    };\n    fetchNDVI();\n  }, []);\n\n  const generatePulseData = (ndviValue, date) => ({\n    type: \"FeatureCollection\",\n    features: globalPoints.map(([lon, lat]) => ({\n      type: \"Feature\",\n      geometry: { type: \"Point\", coordinates: [lon, lat] },\n      properties: {\n        ndvi: ndviValue,\n        date,\n        intensity: Math.max(0, Math.min(1, (ndviValue - 0.28) / 0.22)),\n      },\n    })),\n  });\n\n  const addPulseLayer = (map, sourceId, layerId, data) => {\n    if (!map.getSource(sourceId)) {\n      map.addSource(sourceId, { type: \"geojson\", data });\n    } else {\n      map.getSource(sourceId).setData(data);\n    }\n\n    if (!map.getLayer(layerId)) {\n      map.addLayer({\n        id: layerId,\n        type: \"circle\",\n        source: sourceId,\n        paint: {\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"intensity\"], 0, 2, 1, 10],\n          \"circle-color\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"get\", \"intensity\"],\n            0, \"#60a5fa\",\n            0.3, \"#facc15\",\n            0.6, \"#22c55e\",\n            1, \"#15803d\",\n          ],\n          \"circle-opacity\": 0.6,\n          \"circle-blur\": 0.7,\n        },\n      });\n    }\n  };\n\n  // âœ… Init maps & interactions\n  useEffect(() => {\n    if (!leftMapContainer.current) return;\n\n    const createMap = (container) =>\n      new mapboxgl.Map({\n        container,\n        style: \"mapbox://styles/mapbox/light-v11\",\n        center: [0, 20],\n        zoom: 1.5,\n      });\n\n    const leftMap = createMap(leftMapContainer.current);\n    leftMapRef.current = leftMap;\n\n    if (comparisonMode && rightMapContainer.current) {\n      const rightMap = createMap(rightMapContainer.current);\n      rightMapRef.current = rightMap;\n    }\n\n    // ðŸ”¹ Add interactions (click + draw)\n    const draw = new MapboxDraw({\n      displayControlsDefault: false,\n      controls: { polygon: true, trash: true },\n    });\n    leftMap.addControl(draw);\n\n    leftMap.on(\"click\", async (e) => {\n      const { lng, lat } = e.lngLat;\n\n      new mapboxgl.Marker({ color: \"lime\" }).setLngLat([lng, lat]).addTo(leftMap);\n\n      try {\n        const res = await api.get(\"/ndvi/point\", {\n          params: { \n            lat, \n            lon: lng, \n            start: \"2024-03-01\", \n            end: \"2024-05-31\", \n            buffer: 1000 \n          },\n        });\n        setSelectedRegion({ lat, lon: lng });\n        setRegionData(res.data.data);\n        setCurrentIndex(0);\n        setIsPlaying(true);\n      } catch (err) {\n        console.error(\"Error fetching point NDVI:\", err);\n      }\n    });\n\n    leftMap.on(\"draw.create\", async (e) => {\n      const coords = e.features[0].geometry.coordinates[0];\n      const lons = coords.map((c) => c[0]);\n      const lats = coords.map((c) => c[1]);\n      const bbox = [Math.min(...lons), Math.min(...lats), Math.max(...lons), Math.max(...lats)];\n\n      try {\n        const res = await api.get(\"/ndvi/regional\", {\n          params: { bbox: bbox.join(\",\"), start: \"2024-03-01\", end: \"2024-05-31\" },\n        });\n        setSelectedRegion({ bbox });\n        setRegionData(res.data.data);\n        setCurrentIndex(0);\n        setIsPlaying(true);\n      } catch (err) {\n        console.error(\"Error fetching regional NDVI:\", err);\n      }\n    });\n\n    return () => {\n      if (leftMapRef.current) leftMapRef.current.remove();\n      if (rightMapRef.current) rightMapRef.current.remove();\n    };\n  }, [comparisonMode]);\n\n  // âœ… Animate pulses\n  useEffect(() => {\n    if (!leftMapRef.current || ndviData.length === 0) return;\n\n    let i = 0;\n    const interval = setInterval(() => {\n      i = (i + 1) % ndviData.length;\n      setFrame(i);\n\n      const { ndvi, date } = ndviData[i];\n      const pulseData = generatePulseData(ndvi, date);\n\n      addPulseLayer(leftMapRef.current, \"ndvi-source-left\", \"ndvi-layer-left\", pulseData);\n      if (comparisonMode && rightMapRef.current) {\n        addPulseLayer(rightMapRef.current, \"ndvi-source-right\", \"ndvi-layer-right\", pulseData);\n      }\n    }, 1500);\n\n    return () => clearInterval(interval);\n  }, [ndviData, comparisonMode]);\n\n  return (\n    <div className=\"flex w-full h-screen relative\">\n      <div ref={leftMapContainer} className=\"flex-1\" />\n      {comparisonMode && (\n        <div ref={rightMapContainer} className=\"flex-1 border-l border-gray-300\" />\n      )}\n\n      {/* HUD */}\n      {ndviData.length > 0 && (\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-white/80 px-4 py-2 rounded-lg shadow\">\n          <p className=\"text-sm font-semibold\">\n            ðŸ“… {ndviData[frame]?.date} | ðŸŒ± NDVI: {ndviData[frame]?.ndvi.toFixed(3)}\n          </p>\n        </div>\n      )}\n\n      <button\n        onClick={() => setComparisonMode(!comparisonMode)}\n        className=\"absolute top-4 right-4 bg-emerald-500 text-white px-4 py-2 rounded-lg shadow-lg\"\n      >\n        {comparisonMode ? \"Exit Comparison\" : \"Compare\"}\n      </button>\n\n      {/* Point/Region NDVI slider */}\n      {selectedRegion && regionData.length > 0 && (\n        <div className=\"absolute bottom-20 left-1/2 -translate-x-1/2 w-[80%] max-w-2xl z-20\">\n          <div className=\"bg-black/80 p-5 rounded-2xl shadow-2xl\">\n            <h3 className=\"text-white text-lg mb-2\">\n              NDVI Timeline â€¢{\" \"}\n              {selectedRegion.lat\n                ? `${selectedRegion.lat.toFixed(2)}Â°, ${selectedRegion.lon.toFixed(2)}Â°`\n                : \"Region\"}\n            </h3>\n\n            <input\n              type=\"range\"\n              min=\"0\"\n              max={regionData.length - 1}\n              value={currentIndex}\n              onChange={(e) => {\n                setCurrentIndex(parseInt(e.target.value));\n                setIsPlaying(false);\n              }}\n              className=\"w-full h-2 bg-gray-700 rounded-full appearance-none cursor-pointer\"\n            />\n\n            <div className=\"mt-2 text-sm text-gray-400\">\n              {regionData[currentIndex]?.date} â†’ NDVI{\" \"}\n              {regionData[currentIndex]?.ndvi.toFixed(3)}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}