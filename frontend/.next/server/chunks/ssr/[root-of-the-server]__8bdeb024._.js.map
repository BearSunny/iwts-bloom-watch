{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/BloomWatch/bloom-watch/frontend/src/app/BloomingMap.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport axios from \"axios\";\r\n\r\nmapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n});\r\n\r\n// Generate ~300 random global points\r\nconst generateRandomPoints = (count = 300) => {\r\n  const points = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const lat = Math.random() * 180 - 90; // -90 â†’ +90\r\n    const lon = Math.random() * 360 - 180; // -180 â†’ +180\r\n    points.push([lon, lat]);\r\n  }\r\n  return points;\r\n};\r\nconst globalPoints = generateRandomPoints();\r\n\r\nexport default function BloomingMap() {\r\n  const leftMapContainer = useRef(null);\r\n  const rightMapContainer = useRef(null);\r\n  const leftMapRef = useRef(null);\r\n  const rightMapRef = useRef(null);\r\n\r\n  const [ndviData, setNdviData] = useState([]);\r\n  const [frame, setFrame] = useState(0);\r\n  const [comparisonMode, setComparisonMode] = useState(false);\r\n\r\n  // âœ… Fetch NDVI time series\r\n  useEffect(() => {\r\n    const fetchNDVI = async () => {\r\n      try {\r\n        const res = await api.get(\"/ndvi/global\");\r\n        setNdviData(res.data.data); // [{date, ndvi}]\r\n      } catch (err) {\r\n        console.error(\"Error fetching NDVI:\", err);\r\n      }\r\n    };\r\n    fetchNDVI();\r\n  }, []);\r\n\r\n  const generatePulseData = (ndviValue, date) => ({\r\n    type: \"FeatureCollection\",\r\n    features: globalPoints.map(([lon, lat]) => ({\r\n      type: \"Feature\",\r\n      geometry: { type: \"Point\", coordinates: [lon, lat] },\r\n      properties: {\r\n        ndvi: ndviValue,\r\n        date,\r\n        intensity: Math.max(0, Math.min(1, (ndviValue - 0.28) / 0.22)), // normalize 0â€“1\r\n      },\r\n    })),\r\n  });\r\n\r\n  const addPulseLayer = (map, sourceId, layerId, data) => {\r\n    if (!map.getSource(sourceId)) {\r\n      map.addSource(sourceId, { type: \"geojson\", data });\r\n    } else {\r\n      map.getSource(sourceId).setData(data);\r\n    }\r\n\r\n    if (!map.getLayer(layerId)) {\r\n      map.addLayer({\r\n        id: layerId,\r\n        type: \"circle\",\r\n        source: sourceId,\r\n        paint: {\r\n          \"circle-radius\": [\r\n            \"interpolate\", [\"linear\"], [\"get\", \"intensity\"],\r\n            0, 2,\r\n            1, 10,\r\n          ],\r\n          \"circle-color\": [\r\n            \"interpolate\", [\"linear\"], [\"get\", \"intensity\"],\r\n            0, \"#60a5fa\",   // winter (blue)\r\n            0.3, \"#facc15\", // spring (yellow)\r\n            0.6, \"#22c55e\", // summer (green)\r\n            1, \"#15803d\",   // peak\r\n          ],\r\n          \"circle-opacity\": 0.6,\r\n          \"circle-blur\": 0.7,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // âœ… Init maps\r\n  useEffect(() => {\r\n    if (!leftMapContainer.current) return;\r\n\r\n    const createMap = (container) =>\r\n      new mapboxgl.Map({\r\n        container,\r\n        style: \"mapbox://styles/mapbox/light-v11\",\r\n        center: [0, 20],\r\n        zoom: 1.5,\r\n      });\r\n\r\n    const leftMap = createMap(leftMapContainer.current);\r\n    leftMapRef.current = leftMap;\r\n\r\n    if (comparisonMode && rightMapContainer.current) {\r\n      const rightMap = createMap(rightMapContainer.current);\r\n      rightMapRef.current = rightMap;\r\n    }\r\n\r\n    return () => {\r\n      if (leftMapRef.current) leftMapRef.current.remove();\r\n      if (rightMapRef.current) rightMapRef.current.remove();\r\n    };\r\n  }, [comparisonMode]);\r\n\r\n  // âœ… Animate pulses over NDVI timeline\r\n  useEffect(() => {\r\n    if (!leftMapRef.current || ndviData.length === 0) return;\r\n\r\n    let i = 0;\r\n    const interval = setInterval(() => {\r\n      i = (i + 1) % ndviData.length;\r\n      setFrame(i);\r\n\r\n      const { ndvi, date } = ndviData[i];\r\n      const pulseData = generatePulseData(ndvi, date);\r\n\r\n      addPulseLayer(leftMapRef.current, \"ndvi-source-left\", \"ndvi-layer-left\", pulseData);\r\n\r\n      if (comparisonMode && rightMapRef.current) {\r\n        addPulseLayer(rightMapRef.current, \"ndvi-source-right\", \"ndvi-layer-right\", pulseData);\r\n      }\r\n    }, 1500);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [ndviData, comparisonMode]);\r\n\r\n  return (\r\n    <div className=\"flex w-full h-screen relative\">\r\n      <div ref={leftMapContainer} className=\"flex-1\" />\r\n      {comparisonMode && (\r\n        <div ref={rightMapContainer} className=\"flex-1 border-l border-gray-300\" />\r\n      )}\r\n\r\n      {/* HUD */}\r\n      {ndviData.length > 0 && (\r\n        <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-white/80 px-4 py-2 rounded-lg shadow\">\r\n          <p className=\"text-sm font-semibold\">\r\n            {ndviData[frame]?.date} | ðŸŒ± NDVI: {ndviData[frame]?.ndvi.toFixed(3)}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        onClick={() => setComparisonMode(!comparisonMode)}\r\n        className=\"absolute top-4 right-4 bg-emerald-500 text-white px-4 py-2 rounded-lg shadow-lg\"\r\n      >\r\n        {comparisonMode ? \"Exit Comparison\" : \"Compare\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;;;;;;AAEA;AACA;AAJA;;;;;;AAMA,+JAAQ,CAAC,WAAW;AAEpB,MAAM;AACN,MAAM,MAAM,gJAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;AACX;AAEA,qCAAqC;AACrC,MAAM,uBAAuB,CAAC,QAAQ,GAAG;IACvC,MAAM,SAAS,EAAE;IACjB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;QAC9B,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,IAAI,YAAY;QAClD,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,cAAc;QACrD,OAAO,IAAI,CAAC;YAAC;YAAK;SAAI;IACxB;IACA,OAAO;AACT;AACA,MAAM,eAAe;AAEN,SAAS;IACtB,MAAM,mBAAmB,IAAA,+MAAM,EAAC;IAChC,MAAM,oBAAoB,IAAA,+MAAM,EAAC;IACjC,MAAM,aAAa,IAAA,+MAAM,EAAC;IAC1B,MAAM,cAAc,IAAA,+MAAM,EAAC;IAE3B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IACnC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAAC;IAErD,2BAA2B;IAC3B,IAAA,kNAAS,EAAC;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,MAAM,MAAM,IAAI,GAAG,CAAC;gBAC1B,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,iBAAiB;YAC/C,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,wBAAwB;YACxC;QACF;QACA;IACF,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAC,WAAW,OAAS,CAAC;YAC9C,MAAM;YACN,UAAU,aAAa,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,GAAK,CAAC;oBAC1C,MAAM;oBACN,UAAU;wBAAE,MAAM;wBAAS,aAAa;4BAAC;4BAAK;yBAAI;oBAAC;oBACnD,YAAY;wBACV,MAAM;wBACN;wBACA,WAAW,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI;oBAC1D;gBACF,CAAC;QACH,CAAC;IAED,MAAM,gBAAgB,CAAC,KAAK,UAAU,SAAS;QAC7C,IAAI,CAAC,IAAI,SAAS,CAAC,WAAW;YAC5B,IAAI,SAAS,CAAC,UAAU;gBAAE,MAAM;gBAAW;YAAK;QAClD,OAAO;YACL,IAAI,SAAS,CAAC,UAAU,OAAO,CAAC;QAClC;QAEA,IAAI,CAAC,IAAI,QAAQ,CAAC,UAAU;YAC1B,IAAI,QAAQ,CAAC;gBACX,IAAI;gBACJ,MAAM;gBACN,QAAQ;gBACR,OAAO;oBACL,iBAAiB;wBACf;wBAAe;4BAAC;yBAAS;wBAAE;4BAAC;4BAAO;yBAAY;wBAC/C;wBAAG;wBACH;wBAAG;qBACJ;oBACD,gBAAgB;wBACd;wBAAe;4BAAC;yBAAS;wBAAE;4BAAC;4BAAO;yBAAY;wBAC/C;wBAAG;wBACH;wBAAK;wBACL;wBAAK;wBACL;wBAAG;qBACJ;oBACD,kBAAkB;oBAClB,eAAe;gBACjB;YACF;QACF;IACF;IAEA,cAAc;IACd,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,iBAAiB,OAAO,EAAE;QAE/B,MAAM,YAAY,CAAC,YACjB,IAAI,+JAAQ,CAAC,GAAG,CAAC;gBACf;gBACA,OAAO;gBACP,QAAQ;oBAAC;oBAAG;iBAAG;gBACf,MAAM;YACR;QAEF,MAAM,UAAU,UAAU,iBAAiB,OAAO;QAClD,WAAW,OAAO,GAAG;QAErB,IAAI,kBAAkB,kBAAkB,OAAO,EAAE;YAC/C,MAAM,WAAW,UAAU,kBAAkB,OAAO;YACpD,YAAY,OAAO,GAAG;QACxB;QAEA,OAAO;YACL,IAAI,WAAW,OAAO,EAAE,WAAW,OAAO,CAAC,MAAM;YACjD,IAAI,YAAY,OAAO,EAAE,YAAY,OAAO,CAAC,MAAM;QACrD;IACF,GAAG;QAAC;KAAe;IAEnB,sCAAsC;IACtC,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,WAAW,OAAO,IAAI,SAAS,MAAM,KAAK,GAAG;QAElD,IAAI,IAAI;QACR,MAAM,WAAW,YAAY;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,MAAM;YAC7B,SAAS;YAET,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC,EAAE;YAClC,MAAM,YAAY,kBAAkB,MAAM;YAE1C,cAAc,WAAW,OAAO,EAAE,oBAAoB,mBAAmB;YAEzE,IAAI,kBAAkB,YAAY,OAAO,EAAE;gBACzC,cAAc,YAAY,OAAO,EAAE,qBAAqB,oBAAoB;YAC9E;QACF,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;QAAU;KAAe;IAE7B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,KAAK;gBAAkB,WAAU;;;;;;YACrC,gCACC,8OAAC;gBAAI,KAAK;gBAAmB,WAAU;;;;;;YAIxC,SAAS,MAAM,GAAG,mBACjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;;wBACV,QAAQ,CAAC,MAAM,EAAE;wBAAK;wBAAa,QAAQ,CAAC,MAAM,EAAE,KAAK,QAAQ;;;;;;;;;;;;0BAKxE,8OAAC;gBACC,SAAS,IAAM,kBAAkB,CAAC;gBAClC,WAAU;0BAET,iBAAiB,oBAAoB;;;;;;;;;;;;AAI9C","debugId":null}}]
}